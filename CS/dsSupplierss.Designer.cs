// VBConversions Note: VB project level imports
using System.Data;
using System.Collections.Generic;
using PDSA.Data;
using PDSA.WinForms.Forms;
using PDSA.Security;
using System.Diagnostics;
using PDSA.Common;
using PDSA.WinForms;
using PDSA.WinForms.Security;
using PDSA.PDSACryptography;
using DoorsPOS.Utility;
using Microsoft.VisualBasic;
using System.Collections;
using System;
using DoorsPOS.BusinessLayer;
using System.Windows.Forms;
using System.Drawing;
using System.Linq;
using DoorsPOS.DataLayer;
// End of VB project level imports


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------




///<summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
namespace DoorsPOS.WinApp
{
	[global::System.Serializable(), 
	global::System.ComponentModel.DesignerCategoryAttribute("code"), 
	global::System.ComponentModel.ToolboxItem(true), 
	global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), 
	global::System.Xml.Serialization.XmlRootAttribute("dsSupplierss"), 
	global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]public 
	partial class dsSupplierss : global::System.Data.DataSet
	{
		
		private suppliersDataTable tablesuppliers;
		
		private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public dsSupplierss()
		{
			this.BeginInit();
			this.InitClass();
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			base.Relations.CollectionChanged += schemaChangedHandler;
			this.EndInit();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected dsSupplierss(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context, false)
		{
			if (this.IsBinarySerialized(info, context) == true)
			{
				this.InitVars(false);
				global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
				this.Tables.CollectionChanged += schemaChangedHandler1;
				this.Relations.CollectionChanged += schemaChangedHandler1;
				return ;
			}
			string strSchema = System.Convert.ToString(info.GetValue("XmlSchema", typeof(string)));
			if (this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)
			{
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
				if (!((ds.Tables["suppliers"]) == null))
				{
					base.Tables.Add(new suppliersDataTable(ds.Tables["suppliers"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
			}
			this.GetSerializationData(info, context);
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false), 
global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public suppliersDataTable suppliers
		{
			get
			{
				return this.tablesuppliers;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.BrowsableAttribute(true), 
global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
		{
			get
			{
				return this._schemaSerializationMode;
			}
			set
			{
				this._schemaSerializationMode = value;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]public new global::System.Data.DataTableCollection Tables
		{
			get
			{
				return base.Tables;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]public new global::System.Data.DataRelationCollection Relations
		{
			get
			{
				return base.Relations;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void InitializeDerivedDataSet()
		{
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public override global::System.Data.DataSet Clone()
		{
			dsSupplierss cln = (dsSupplierss) (base.Clone());
			cln.InitVars();
			cln.SchemaSerializationMode = this.SchemaSerializationMode;
			return cln;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override bool ShouldSerializeTables()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override bool ShouldSerializeRelations()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
		{
			if (this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)
			{
				this.Reset();
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXml(reader);
				if (!((ds.Tables["suppliers"]) == null))
				{
					base.Tables.Add(new suppliersDataTable(ds.Tables["suppliers"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXml(reader);
				this.InitVars();
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
		{
			global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
			this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
			stream.Position = 0;
			return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars()
		{
			this.InitVars(true);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars(bool initTable)
		{
			this.tablesuppliers = (suppliersDataTable) (base.Tables["suppliers"]);
			if (initTable == true)
			{
				if (!((this.tablesuppliers) == null))
				{
					this.tablesuppliers.InitVars();
				}
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitClass()
		{
			this.DataSetName = "dsSupplierss";
			this.Prefix = "";
			this.Namespace = "http://tempuri.org/dsSupplierss.xsd";
			this.EnforceConstraints = true;
			this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
			this.tablesuppliers = new suppliersDataTable();
			base.Tables.Add(this.tablesuppliers);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private bool ShouldSerializesuppliers()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
		{
			if (e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)
			{
				this.InitVars();
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
		{
			dsSupplierss ds = new dsSupplierss();
			global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
			global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
			global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
			any.Namespace = ds.Namespace;
			sequence.Items.Add(any);
			type.Particle = sequence;
			global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
			if (xs.Contains(dsSchema.TargetNamespace))
			{
				global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
				global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
				try
				{
					global::System.Xml.Schema.XmlSchema schema = null;
					dsSchema.Write(s1);
					global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
					while (schemas.MoveNext())
					{
						schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
						s2.SetLength(0);
						schema.Write(s2);
						if (s1.Length == s2.Length)
						{
							s1.Position = 0;
							s2.Position = 0;
							
							while ((s1.Position != s1.Length) 
								&& (s1.ReadByte() == s2.ReadByte()))
							{
								
								
							}
							if (s1.Position == s1.Length)
							{
								return type;
							}
						}
						
					}
				}
				finally
				{
					if (!((s1) == null))
					{
						s1.Close();
					}
					if (!((s2) == null))
					{
						s2.Close();
					}
				}
			}
			xs.Add(dsSchema);
			return type;
		}
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public delegate void suppliersRowChangeEventHandler(object sender, suppliersRowChangeEvent e);
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class suppliersDataTable : global::System.Data.TypedTableBase<suppliersRow>
		{
			
			private global::System.Data.DataColumn columnsupcode;
			
			private global::System.Data.DataColumn columnsupplier;
			
			private global::System.Data.DataColumn columnaddress;
			
			private global::System.Data.DataColumn columnphone1;
			
			private global::System.Data.DataColumn columntelno;
			
			private global::System.Data.DataColumn columnfaxno;
			
			private global::System.Data.DataColumn columntinno;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersDataTable()
			{
				this.TableName = "suppliers";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal suppliersDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected suppliersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn supcodeColumn
			{
				get
				{
					return this.columnsupcode;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn supplierColumn
			{
				get
				{
					return this.columnsupplier;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn addressColumn
			{
				get
				{
					return this.columnaddress;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn phone1Column
			{
				get
				{
					return this.columnphone1;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn telnoColumn
			{
				get
				{
					return this.columntelno;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn faxnoColumn
			{
				get
				{
					return this.columnfaxno;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn tinnoColumn
			{
				get
				{
					return this.columntinno;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow this[int index]
			{
				get
				{
					return ((suppliersRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private suppliersRowChangeEventHandler suppliersRowChangingEvent;
			public event suppliersRowChangeEventHandler suppliersRowChanging
			{
				add
				{
					suppliersRowChangingEvent = (suppliersRowChangeEventHandler) System.Delegate.Combine(suppliersRowChangingEvent, value);
				}
				remove
				{
					suppliersRowChangingEvent = (suppliersRowChangeEventHandler) System.Delegate.Remove(suppliersRowChangingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private suppliersRowChangeEventHandler suppliersRowChangedEvent;
			public event suppliersRowChangeEventHandler suppliersRowChanged
			{
				add
				{
					suppliersRowChangedEvent = (suppliersRowChangeEventHandler) System.Delegate.Combine(suppliersRowChangedEvent, value);
				}
				remove
				{
					suppliersRowChangedEvent = (suppliersRowChangeEventHandler) System.Delegate.Remove(suppliersRowChangedEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private suppliersRowChangeEventHandler suppliersRowDeletingEvent;
			public event suppliersRowChangeEventHandler suppliersRowDeleting
			{
				add
				{
					suppliersRowDeletingEvent = (suppliersRowChangeEventHandler) System.Delegate.Combine(suppliersRowDeletingEvent, value);
				}
				remove
				{
					suppliersRowDeletingEvent = (suppliersRowChangeEventHandler) System.Delegate.Remove(suppliersRowDeletingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private suppliersRowChangeEventHandler suppliersRowDeletedEvent;
			public event suppliersRowChangeEventHandler suppliersRowDeleted
			{
				add
				{
					suppliersRowDeletedEvent = (suppliersRowChangeEventHandler) System.Delegate.Combine(suppliersRowDeletedEvent, value);
				}
				remove
				{
					suppliersRowDeletedEvent = (suppliersRowChangeEventHandler) System.Delegate.Remove(suppliersRowDeletedEvent, value);
				}
			}
			
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void AddsuppliersRow(suppliersRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow AddsuppliersRow(string supplier, string address, string phone1, string telno, string faxno, string tinno)
			{
				suppliersRow rowsuppliersRow = (suppliersRow) (this.NewRow());
				object[] columnValuesArray = new object[] {null, supplier, address, phone1, telno, faxno, tinno};
				rowsuppliersRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowsuppliersRow);
				return rowsuppliersRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow FindBysupcode(int supcode)
			{
				return ((suppliersRow) (this.Rows.Find(new object[] {supcode})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				suppliersDataTable cln = (suppliersDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new suppliersDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars()
			{
				this.columnsupcode = base.Columns["supcode"];
				this.columnsupplier = base.Columns["supplier"];
				this.columnaddress = base.Columns["address"];
				this.columnphone1 = base.Columns["phone1"];
				this.columntelno = base.Columns["telno"];
				this.columnfaxno = base.Columns["faxno"];
				this.columntinno = base.Columns["tinno"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitClass()
			{
				this.columnsupcode = new global::System.Data.DataColumn("supcode", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsupcode);
				this.columnsupplier = new global::System.Data.DataColumn("supplier", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsupplier);
				this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnaddress);
				this.columnphone1 = new global::System.Data.DataColumn("phone1", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnphone1);
				this.columntelno = new global::System.Data.DataColumn("telno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columntelno);
				this.columnfaxno = new global::System.Data.DataColumn("faxno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnfaxno);
				this.columntinno = new global::System.Data.DataColumn("tinno", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columntinno);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnsupcode}, true));
				this.columnsupcode.AutoIncrement = true;
				this.columnsupcode.AutoIncrementSeed = -1;
				this.columnsupcode.AutoIncrementStep = -1;
				this.columnsupcode.AllowDBNull = false;
				this.columnsupcode.ReadOnly = true;
				this.columnsupcode.Unique = true;
				this.columnsupplier.AllowDBNull = false;
				this.columnsupplier.MaxLength = 50;
				this.columnaddress.MaxLength = 50;
				this.columnphone1.MaxLength = 30;
				this.columntelno.MaxLength = 15;
				this.columnfaxno.MaxLength = 15;
				this.columntinno.MaxLength = 20;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow NewsuppliersRow()
			{
				return ((suppliersRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new suppliersRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(suppliersRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!((this.suppliersRowChangedEvent) == null))
				{
					if (suppliersRowChangedEvent != null)
						suppliersRowChangedEvent(this, new suppliersRowChangeEvent(((suppliersRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!((this.suppliersRowChangingEvent) == null))
				{
					if (suppliersRowChangingEvent != null)
						suppliersRowChangingEvent(this, new suppliersRowChangeEvent(((suppliersRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!((this.suppliersRowDeletedEvent) == null))
				{
					if (suppliersRowDeletedEvent != null)
						suppliersRowDeletedEvent(this, new suppliersRowChangeEvent(((suppliersRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!((this.suppliersRowDeletingEvent) == null))
				{
					if (suppliersRowDeletingEvent != null)
						suppliersRowDeletingEvent(this, new suppliersRowChangeEvent(((suppliersRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void RemovesuppliersRow(suppliersRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dsSupplierss ds = new dsSupplierss();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "suppliersDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!((s1) == null))
						{
							s1.Close();
						}
						if (!((s2) == null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class suppliersRow : global::System.Data.DataRow
		{
			
			private suppliersDataTable tablesuppliers;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal suppliersRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tablesuppliers = (suppliersDataTable) this.Table;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int supcode
			{
				get
				{
					return System.Convert.ToInt32(this[this.tablesuppliers.supcodeColumn]);
				}
				set
				{
					this[this.tablesuppliers.supcodeColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string supplier
			{
				get
				{
					return System.Convert.ToString(this[this.tablesuppliers.supplierColumn]);
				}
				set
				{
					this[this.tablesuppliers.supplierColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string address
			{
				get
				{
					try
					{
						return System.Convert.ToString(this[this.tablesuppliers.addressColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'address\' in table \'suppliers\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablesuppliers.addressColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string phone1
			{
				get
				{
					try
					{
						return System.Convert.ToString(this[this.tablesuppliers.phone1Column]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'phone1\' in table \'suppliers\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablesuppliers.phone1Column] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string telno
			{
				get
				{
					try
					{
						return System.Convert.ToString(this[this.tablesuppliers.telnoColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'telno\' in table \'suppliers\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablesuppliers.telnoColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string faxno
			{
				get
				{
					try
					{
						return System.Convert.ToString(this[this.tablesuppliers.faxnoColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'faxno\' in table \'suppliers\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablesuppliers.faxnoColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string tinno
			{
				get
				{
					try
					{
						return System.Convert.ToString(this[this.tablesuppliers.tinnoColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'tinno\' in table \'suppliers\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablesuppliers.tinnoColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IsaddressNull()
			{
				return this.IsNull(this.tablesuppliers.addressColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetaddressNull()
			{
				this[this.tablesuppliers.addressColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool Isphone1Null()
			{
				return this.IsNull(this.tablesuppliers.phone1Column);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void Setphone1Null()
			{
				this[this.tablesuppliers.phone1Column] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IstelnoNull()
			{
				return this.IsNull(this.tablesuppliers.telnoColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SettelnoNull()
			{
				this[this.tablesuppliers.telnoColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IsfaxnoNull()
			{
				return this.IsNull(this.tablesuppliers.faxnoColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetfaxnoNull()
			{
				this[this.tablesuppliers.faxnoColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IstinnoNull()
			{
				return this.IsNull(this.tablesuppliers.tinnoColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SettinnoNull()
			{
				this[this.tablesuppliers.tinnoColumn] = global::System.Convert.DBNull;
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public class suppliersRowChangeEvent : global::System.EventArgs
		{
			
			private suppliersRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRowChangeEvent(suppliersRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
	}
	
	namespace dsSupplierssTableAdapters
	{
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class suppliersTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!((this.Adapter.InsertCommand) == null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!((this.Adapter.DeleteCommand) == null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!((this.Adapter.UpdateCommand) == null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!((this.CommandCollection[i]) == null))
						{
							((global::System.Data.SqlClient.SqlCommand) (this.CommandCollection[i])).Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.DeleteCommand) == null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.InsertCommand) == null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.UpdateCommand) == null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "suppliers";
				tableMapping.ColumnMappings.Add("supcode", "supcode");
				tableMapping.ColumnMappings.Add("supplier", "supplier");
				tableMapping.ColumnMappings.Add("address", "address");
				tableMapping.ColumnMappings.Add("phone1", "phone1");
				tableMapping.ColumnMappings.Add("telno", "telno");
				tableMapping.ColumnMappings.Add("faxno", "faxno");
				tableMapping.ColumnMappings.Add("tinno", "tinno");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[suppliers] WHERE (([supcode] = @Original_supcode) AND ([suppli" + 
					"er] = @Original_supplier) AND ((@IsNull_address = 1 AND [address] IS NULL) OR ([" + 
					"address] = @Original_address)) AND ((@IsNull_phone1 = 1 AND [phone1] IS NULL) OR" + 
					" ([phone1] = @Original_phone1)) AND ((@IsNull_telno = 1 AND [telno] IS NULL) OR " + 
					"([telno] = @Original_telno)) AND ((@IsNull_faxno = 1 AND [faxno] IS NULL) OR ([f" + 
					"axno] = @Original_faxno)) AND ((@IsNull_tinno = 1 AND [tinno] IS NULL) OR ([tinn" + 
					"o] = @Original_tinno)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supplier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supplier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "phone1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "phone1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_telno", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "telno", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_telno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "telno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_faxno", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "faxno", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_faxno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "faxno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_tinno", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "tinno", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tinno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "tinno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[suppliers] ([supplier], [address], [phone1], [telno], [faxno]," + 
					" [tinno]) VALUES (@supplier, @address, @phone1, @telno, @faxno, @tinno);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT" + 
					" supcode, supplier, address, phone1, telno, faxno, tinno FROM suppliers WHERE (s" + 
					"upcode = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@supplier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supplier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "phone1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@telno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "telno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@faxno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "faxno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tinno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "tinno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[suppliers] SET [supplier] = @supplier, [address] = @address, [phone" + 
					"1] = @phone1, [telno] = @telno, [faxno] = @faxno, [tinno] = @tinno WHERE (([supc" + 
					"ode] = @Original_supcode) AND ([supplier] = @Original_supplier) AND ((@IsNull_ad" + 
					"dress = 1 AND [address] IS NULL) OR ([address] = @Original_address)) AND ((@IsNu" + 
					"ll_phone1 = 1 AND [phone1] IS NULL) OR ([phone1] = @Original_phone1)) AND ((@IsN" + 
					"ull_telno = 1 AND [telno] IS NULL) OR ([telno] = @Original_telno)) AND ((@IsNull" + 
					"_faxno = 1 AND [faxno] IS NULL) OR ([faxno] = @Original_faxno)) AND ((@IsNull_ti" + 
					"nno = 1 AND [tinno] IS NULL) OR ([tinno] = @Original_tinno)));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT supcode, " + 
					"supplier, address, phone1, telno, faxno, tinno FROM suppliers WHERE (supcode = @" + 
					"supcode)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@supplier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supplier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "phone1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@telno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "telno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@faxno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "faxno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@tinno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "tinno", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supplier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supplier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "phone1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "phone1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_telno", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "telno", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_telno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "telno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_faxno", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "faxno", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_faxno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "faxno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_tinno", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "tinno", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_tinno", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "tinno", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@supcode", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::DoorsPOS.WinApp.My.Settings.Default.doorsposConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT supcode, supplier, address, phone1, telno, faxno, tinno FROM dbo.suppliers" + 
					"";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dsSupplierss.suppliersDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dsSupplierss.suppliersDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dsSupplierss.suppliersDataTable dataTable = new dsSupplierss.suppliersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsSupplierss.suppliersDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsSupplierss dataSet)
			{
				return this.Adapter.Update(dataSet, "suppliers");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(int Original_supcode, string Original_supplier, string Original_address, string Original_phone1, string Original_telno, string Original_faxno, string Original_tinno)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToInt32(Original_supcode);
				if (Original_supplier == null)
				{
					throw (new global::System.ArgumentNullException("Original_supplier"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = System.Convert.ToString(Original_supplier);
				}
				if (Original_address == null)
				{
					this.Adapter.DeleteCommand.Parameters[2].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[2].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[3].Value = System.Convert.ToString(Original_address);
				}
				if (Original_phone1 == null)
				{
					this.Adapter.DeleteCommand.Parameters[4].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[4].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[5].Value = System.Convert.ToString(Original_phone1);
				}
				if (Original_telno == null)
				{
					this.Adapter.DeleteCommand.Parameters[6].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[6].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[7].Value = System.Convert.ToString(Original_telno);
				}
				if (Original_faxno == null)
				{
					this.Adapter.DeleteCommand.Parameters[8].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[8].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[9].Value = System.Convert.ToString(Original_faxno);
				}
				if (Original_tinno == null)
				{
					this.Adapter.DeleteCommand.Parameters[10].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[10].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[11].Value = System.Convert.ToString(Original_tinno);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string supplier, string address, string phone1, string telno, string faxno, string tinno)
			{
				if (supplier == null)
				{
					throw (new global::System.ArgumentNullException("supplier"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(supplier);
				}
				if (address == null)
				{
					this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = System.Convert.ToString(address);
				}
				if (phone1 == null)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = System.Convert.ToString(phone1);
				}
				if (telno == null)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = System.Convert.ToString(telno);
				}
				if (faxno == null)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = System.Convert.ToString(faxno);
				}
				if (tinno == null)
				{
					this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[5].Value = System.Convert.ToString(tinno);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string supplier, string address, string phone1, string telno, string faxno, string tinno, int Original_supcode, string Original_supplier, string Original_address, string Original_phone1, string Original_telno, string Original_faxno, string Original_tinno, int supcode)
			{
				if (supplier == null)
				{
					throw (new global::System.ArgumentNullException("supplier"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(supplier);
				}
				if (address == null)
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToString(address);
				}
				if (phone1 == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = System.Convert.ToString(phone1);
				}
				if (telno == null)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToString(telno);
				}
				if (faxno == null)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = System.Convert.ToString(faxno);
				}
				if (tinno == null)
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[5].Value = System.Convert.ToString(tinno);
				}
				this.Adapter.UpdateCommand.Parameters[6].Value = System.Convert.ToInt32(Original_supcode);
				if (Original_supplier == null)
				{
					throw (new global::System.ArgumentNullException("Original_supplier"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = System.Convert.ToString(Original_supplier);
				}
				if (Original_address == null)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[9].Value = System.Convert.ToString(Original_address);
				}
				if (Original_phone1 == null)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[11].Value = System.Convert.ToString(Original_phone1);
				}
				if (Original_telno == null)
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[13].Value = System.Convert.ToString(Original_telno);
				}
				if (Original_faxno == null)
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[14].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[15].Value = System.Convert.ToString(Original_faxno);
				}
				if (Original_tinno == null)
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[16].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[17].Value = System.Convert.ToString(Original_tinno);
				}
				this.Adapter.UpdateCommand.Parameters[18].Value = System.Convert.ToInt32(supcode);
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string supplier, string address, string phone1, string telno, string faxno, string tinno, int Original_supcode, string Original_supplier, string Original_address, string Original_phone1, string Original_telno, string Original_faxno, string Original_tinno)
			{
				return this.Update(supplier, address, phone1, telno, faxno, tinno, Original_supcode, Original_supplier, Original_address, Original_phone1, Original_telno, Original_faxno, Original_tinno, Original_supcode);
			}
		}
		
		///<summary>
		///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" + 
		"esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]public 
		partial class TableAdapterManager : global::System.ComponentModel.Component
		{
			
			private UpdateOrderOption _updateOrder;
			
			private suppliersTableAdapter _suppliersTableAdapter;
			
			private bool _backupDataSetBeforeUpdate;
			
			private global::System.Data.IDbConnection _connection;
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public UpdateOrderOption UpdateOrder
			{
				get
				{
					return this._updateOrder;
				}
				set
				{
					this._updateOrder = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
"a", "System.Drawing.Design.UITypeEditor")]public suppliersTableAdapter suppliersTableAdapter
			{
				get
				{
					return this._suppliersTableAdapter;
				}
				set
				{
					this._suppliersTableAdapter = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool BackupDataSetBeforeUpdate
			{
				get
				{
					return this._backupDataSetBeforeUpdate;
				}
				set
				{
					this._backupDataSetBeforeUpdate = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public global::System.Data.IDbConnection Connection
			{
				get
				{
					if (!((this._connection) == null))
					{
						return this._connection;
					}
					if ((!((this._suppliersTableAdapter) == null)) 
						&& (!((this._suppliersTableAdapter.Connection) == null)))
					{
						return this._suppliersTableAdapter.Connection;
					}
					return null;
				}
				set
				{
					this._connection = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public int TableAdapterInstanceCount
			{
				get
				{
					int count = 0;
					if (!((this._suppliersTableAdapter) == null))
					{
						count = count + 1;
					}
					return count;
				}
			}
			
			///<summary>
			///Update rows in top-down order.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private int UpdateUpdatedRows(dsSupplierss dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
			{
				int result = 0;
				if (!((this._suppliersTableAdapter) == null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.suppliers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!((updatedRows) == null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._suppliersTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				return result;
			}
			
			///<summary>
			///Insert rows in top-down order.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private int UpdateInsertedRows(dsSupplierss dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
			{
				int result = 0;
				if (!((this._suppliersTableAdapter) == null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.suppliers.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!((addedRows) == null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._suppliersTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				return result;
			}
			
			///<summary>
			///Delete rows in bottom-up order.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private int UpdateDeletedRows(dsSupplierss dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows)
			{
				int result = 0;
				if (!((this._suppliersTableAdapter) == null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.suppliers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!((deletedRows) == null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._suppliersTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				return result;
			}
			
			///<summary>
			///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
			{
				if ((updatedRows == null) 
					|| (updatedRows.Length < 1))
				{
					return updatedRows;
				}
				if ((allAddedRows == null) 
					|| (allAddedRows.Count < 1))
				{
					return updatedRows;
				}
				global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
				int i = 0;
				while (i < updatedRows.Length)
				{
					global::System.Data.DataRow row = updatedRows[i];
					if (allAddedRows.Contains(row) == false)
					{
						realUpdatedRows.Add(row);
					}
					i = i + 1;
				}
				return realUpdatedRows.ToArray;
			}
			
			///<summary>
			///Update all changes to the dataset.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public virtual int UpdateAll(dsSupplierss dataSet)
			{
				if (dataSet == null)
				{
					throw (new global::System.ArgumentNullException("dataSet"));
				}
				if (dataSet.HasChanges() == false)
				{
					return 0;
				}
				if ((!((this._suppliersTableAdapter) == null)) 
					&& (this.MatchTableAdapterConnection(this._suppliersTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" + 
						"tring."));
				}
				global::System.Data.IDbConnection workConnection = this.Connection;
				if (workConnection == null)
				{
					throw (new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" + 
						"ger TableAdapter property to a valid TableAdapter instance."));
				}
				bool workConnOpened = false;
				if ((workConnection.State & global::System.Data.ConnectionState.Broken) 
					== (int) global::System.Data.ConnectionState.Broken)
				{
					workConnection.Close();
				}
				if (workConnection.State == global::System.Data.ConnectionState.Closed)
				{
					workConnection.Open();
					workConnOpened = true;
				}
				global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
				if (workTransaction == null)
				{
					throw (new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" + 
						"ctions or the current state is not allowing the transaction to begin."));
				}
				global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
				global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
				global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
				global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
				int result = 0;
				global::System.Data.DataSet backupDataSet = null;
				if (this.BackupDataSetBeforeUpdate)
				{
					backupDataSet = new global::System.Data.DataSet();
					backupDataSet.Merge(dataSet);
				}
				try
				{
					//---- Prepare for update -----------
					//
					if (!((this._suppliersTableAdapter) == null))
					{
						revertConnections.Add(this._suppliersTableAdapter, this._suppliersTableAdapter.Connection);
						this._suppliersTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._suppliersTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._suppliersTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._suppliersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._suppliersTableAdapter.Adapter);
						}
					}
					//
					//---- Perform updates -----------
					//
					if (this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)
					{
						result = result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
						result = result + this.UpdateInsertedRows(dataSet, allAddedRows);
					}
					else
					{
						result = result + this.UpdateInsertedRows(dataSet, allAddedRows);
						result = result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
					}
					result = result + this.UpdateDeletedRows(dataSet, allChangedRows);
					//
					//---- Commit updates -----------
					//
					workTransaction.Commit();
					if (0 < allAddedRows.Count)
					{
						global::System.Data.DataRow[] rows = new global::System.Data.DataRow[(allAddedRows.Count) - 1 + 1];
						allAddedRows.CopyTo(rows);
						int i = 0;
						while (i < rows.Length)
						{
							global::System.Data.DataRow row = rows[i];
							row.AcceptChanges();
							i = i + 1;
						}
					}
					if (0 < allChangedRows.Count)
					{
						global::System.Data.DataRow[] rows = new global::System.Data.DataRow[(allChangedRows.Count) - 1 + 1];
						allChangedRows.CopyTo(rows);
						int i = 0;
						while (i < rows.Length)
						{
							global::System.Data.DataRow row = rows[i];
							row.AcceptChanges();
							i = i + 1;
						}
					}
				}
				catch (global::System.Exception ex)
				{
					workTransaction.Rollback();
					//---- Restore the dataset -----------
					if (this.BackupDataSetBeforeUpdate)
					{
						global::System.Diagnostics.Debug.Assert(!((backupDataSet) == null));
						dataSet.Clear();
						dataSet.Merge(backupDataSet);
					}
					else
					{
						if (0 < allAddedRows.Count)
						{
							global::System.Data.DataRow[] rows = new global::System.Data.DataRow[(allAddedRows.Count) - 1 + 1];
							allAddedRows.CopyTo(rows);
							int i = 0;
							while (i < rows.Length)
							{
								global::System.Data.DataRow row = rows[i];
								row.AcceptChanges();
								row.SetAdded();
								i = i + 1;
							}
						}
					}
					throw (ex);
				}
				finally
				{
					if (workConnOpened)
					{
						workConnection.Close();
					}
					if (!((this._suppliersTableAdapter) == null))
					{
						this._suppliersTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._suppliersTableAdapter]);
						this._suppliersTableAdapter.Transaction = null;
					}
					if (0 < adaptersWithAcceptChangesDuringUpdate.Count)
					{
						global::System.Data.Common.DataAdapter[] adapters = new global::System.Data.Common.DataAdapter[(adaptersWithAcceptChangesDuringUpdate.Count) - 1 + 1];
						adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
						int i = 0;
						while (i < adapters.Length)
						{
							global::System.Data.Common.DataAdapter adapter = adapters[i];
							adapter.AcceptChangesDuringUpdate = true;
							i = i + 1;
						}
					}
				}
				return result;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst)
			{
				global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection)
			{
				if (!((this._connection) == null))
				{
					return true;
				}
				if ((this.Connection == null) 
					|| (inputConnection == null))
				{
					return true;
				}
				if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal))
				{
					return true;
				}
				return false;
			}
			
			///<summary>
			///Update Order Option
			///</summary>
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public enum UpdateOrderOption
			{
				
				InsertUpdateDelete = 0,
				
				UpdateInsertDelete = 1
			}
			
			///<summary>
			///Used to sort self-referenced table's rows
			///</summary>
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow>
			{
				
				private global::System.Data.DataRelation _relation;
				
				private int _childFirst;
				
				[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
				global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst)
				{
					this._relation = relation;
					if (childFirst)
					{
						this._childFirst = -1;
					}
					else
					{
						this._childFirst = 1;
					}
				}
				
				[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
				global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, ref int distance)
				{
					global::System.Diagnostics.Debug.Assert(!((row) == null));
					global::System.Data.DataRow root = row;
					distance = 0;
					
					global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
					traversedRows[row] = row;
					
					global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
					
					while ((!((parent) == null)) 
						&& (traversedRows.ContainsKey(parent) == false))
					{
						distance = distance + 1;
						root = parent;
						traversedRows[parent] = parent;
						parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
						
					}
					
					if (distance == 0)
					{
						traversedRows.Clear();
						traversedRows[row] = row;
						parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
						
						while ((!((parent) == null)) 
							&& (traversedRows.ContainsKey(parent) == false))
						{
							distance = distance + 1;
							root = parent;
							traversedRows[parent] = parent;
							parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
							
						}
					}
					
					return root;
				}
				
				[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
				global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2)
				{
					if (object.ReferenceEquals(row1, row2))
					{
						return 0;
					}
					if (row1 == null)
					{
						return -1;
					}
					if (row2 == null)
					{
						return 1;
					}
					
					int distance1 = 0;
					global::System.Data.DataRow root1 = this.GetRoot(row1, ref distance1);
					
					int distance2 = 0;
					global::System.Data.DataRow root2 = this.GetRoot(row2, ref distance2);
					
					if (object.ReferenceEquals(root1, root2))
					{
						return (this._childFirst * distance1.CompareTo(distance2));
					}
					else
					{
						global::System.Diagnostics.Debug.Assert((!((root1.Table) == null)) 
							&& (!((root2.Table) == null)));
						if (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))
						{
							return -1;
						}
						else
						{
							return 1;
						}
					}
				}
			}
		}
	}
	
}
