// VBConversions Note: VB project level imports
using System.Data;
using System.Collections.Generic;
using PDSA.Data;
using PDSA.WinForms.Forms;
using PDSA.Security;
using System.Diagnostics;
using PDSA.Common;
using PDSA.WinForms;
using PDSA.WinForms.Security;
using PDSA.PDSACryptography;
using DoorsPOS.Utility;
using Microsoft.VisualBasic;
using System.Collections;
using System;
using DoorsPOS.BusinessLayer;
using System.Windows.Forms;
using System.Drawing;
using System.Linq;
using DoorsPOS.DataLayer;
// End of VB project level imports


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------




///<summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
namespace DoorsPOS.WinApp
{
	[global::System.Serializable(), 
	global::System.ComponentModel.DesignerCategoryAttribute("code"), 
	global::System.ComponentModel.ToolboxItem(true), 
	global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), 
	global::System.Xml.Serialization.XmlRootAttribute("dsItem"), 
	global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]public 
	partial class dsItem : global::System.Data.DataSet
	{
		
		private categoriesDataTable tablecategories;
		
		private deptDataTable tabledept;
		
		private stocksDataTable tablestocks;
		
		private suppliersDataTable tablesuppliers;
		
		private wsizeDataTable tablewsize;
		
		private global::System.Data.DataRelation relationFK_stocks_categories;
		
		private global::System.Data.DataRelation relationFK_stocks_dept;
		
		private global::System.Data.DataRelation relationFK_stocks_suppliers;
		
		private global::System.Data.DataRelation relationFK_stocks_wsize;
		
		private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public dsItem()
		{
			this.BeginInit();
			this.InitClass();
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			base.Relations.CollectionChanged += schemaChangedHandler;
			this.EndInit();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected dsItem(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context, false)
		{
			if (this.IsBinarySerialized(info, context) == true)
			{
				this.InitVars(false);
				global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
				this.Tables.CollectionChanged += schemaChangedHandler1;
				this.Relations.CollectionChanged += schemaChangedHandler1;
				return ;
			}
			string strSchema = System.Convert.ToString(info.GetValue("XmlSchema", typeof(string)));
			if (this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)
			{
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
				if (!((ds.Tables["categories"]) == null))
				{
					base.Tables.Add(new categoriesDataTable(ds.Tables["categories"]));
				}
				if (!((ds.Tables["dept"]) == null))
				{
					base.Tables.Add(new deptDataTable(ds.Tables["dept"]));
				}
				if (!((ds.Tables["stocks"]) == null))
				{
					base.Tables.Add(new stocksDataTable(ds.Tables["stocks"]));
				}
				if (!((ds.Tables["suppliers"]) == null))
				{
					base.Tables.Add(new suppliersDataTable(ds.Tables["suppliers"]));
				}
				if (!((ds.Tables["wsize"]) == null))
				{
					base.Tables.Add(new wsizeDataTable(ds.Tables["wsize"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
			}
			this.GetSerializationData(info, context);
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false), 
global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public categoriesDataTable categories
		{
			get
			{
				return this.tablecategories;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false), 
global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public deptDataTable dept
		{
			get
			{
				return this.tabledept;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false), 
global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public stocksDataTable stocks
		{
			get
			{
				return this.tablestocks;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false), 
global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public suppliersDataTable suppliers
		{
			get
			{
				return this.tablesuppliers;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false), 
global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]public wsizeDataTable wsize
		{
			get
			{
				return this.tablewsize;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.BrowsableAttribute(true), 
global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
		{
			get
			{
				return this._schemaSerializationMode;
			}
			set
			{
				this._schemaSerializationMode = value;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]public new global::System.Data.DataTableCollection Tables
		{
			get
			{
				return base.Tables;
			}
		}
		
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]public new global::System.Data.DataRelationCollection Relations
		{
			get
			{
				return base.Relations;
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void InitializeDerivedDataSet()
		{
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public override global::System.Data.DataSet Clone()
		{
			dsItem cln = (dsItem) (base.Clone());
			cln.InitVars();
			cln.SchemaSerializationMode = this.SchemaSerializationMode;
			return cln;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override bool ShouldSerializeTables()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override bool ShouldSerializeRelations()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
		{
			if (this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)
			{
				this.Reset();
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXml(reader);
				if (!((ds.Tables["categories"]) == null))
				{
					base.Tables.Add(new categoriesDataTable(ds.Tables["categories"]));
				}
				if (!((ds.Tables["dept"]) == null))
				{
					base.Tables.Add(new deptDataTable(ds.Tables["dept"]));
				}
				if (!((ds.Tables["stocks"]) == null))
				{
					base.Tables.Add(new stocksDataTable(ds.Tables["stocks"]));
				}
				if (!((ds.Tables["suppliers"]) == null))
				{
					base.Tables.Add(new suppliersDataTable(ds.Tables["suppliers"]));
				}
				if (!((ds.Tables["wsize"]) == null))
				{
					base.Tables.Add(new wsizeDataTable(ds.Tables["wsize"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXml(reader);
				this.InitVars();
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
		{
			global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
			this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
			stream.Position = 0;
			return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars()
		{
			this.InitVars(true);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars(bool initTable)
		{
			this.tablecategories = (categoriesDataTable) (base.Tables["categories"]);
			if (initTable == true)
			{
				if (!((this.tablecategories) == null))
				{
					this.tablecategories.InitVars();
				}
			}
			this.tabledept = (deptDataTable) (base.Tables["dept"]);
			if (initTable == true)
			{
				if (!((this.tabledept) == null))
				{
					this.tabledept.InitVars();
				}
			}
			this.tablestocks = (stocksDataTable) (base.Tables["stocks"]);
			if (initTable == true)
			{
				if (!((this.tablestocks) == null))
				{
					this.tablestocks.InitVars();
				}
			}
			this.tablesuppliers = (suppliersDataTable) (base.Tables["suppliers"]);
			if (initTable == true)
			{
				if (!((this.tablesuppliers) == null))
				{
					this.tablesuppliers.InitVars();
				}
			}
			this.tablewsize = (wsizeDataTable) (base.Tables["wsize"]);
			if (initTable == true)
			{
				if (!((this.tablewsize) == null))
				{
					this.tablewsize.InitVars();
				}
			}
			this.relationFK_stocks_categories = this.Relations["FK_stocks_categories"];
			this.relationFK_stocks_dept = this.Relations["FK_stocks_dept"];
			this.relationFK_stocks_suppliers = this.Relations["FK_stocks_suppliers"];
			this.relationFK_stocks_wsize = this.Relations["FK_stocks_wsize"];
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitClass()
		{
			this.DataSetName = "dsItem";
			this.Prefix = "";
			this.Namespace = "http://tempuri.org/dsItem.xsd";
			this.EnforceConstraints = true;
			this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
			this.tablecategories = new categoriesDataTable();
			base.Tables.Add(this.tablecategories);
			this.tabledept = new deptDataTable();
			base.Tables.Add(this.tabledept);
			this.tablestocks = new stocksDataTable();
			base.Tables.Add(this.tablestocks);
			this.tablesuppliers = new suppliersDataTable();
			base.Tables.Add(this.tablesuppliers);
			this.tablewsize = new wsizeDataTable();
			base.Tables.Add(this.tablewsize);
			this.relationFK_stocks_categories = new global::System.Data.DataRelation("FK_stocks_categories", new global::System.Data.DataColumn[] {this.tablecategories.categoryidColumn}, new global::System.Data.DataColumn[] {this.tablestocks.categoryidColumn}, false);
			this.Relations.Add(this.relationFK_stocks_categories);
			this.relationFK_stocks_dept = new global::System.Data.DataRelation("FK_stocks_dept", new global::System.Data.DataColumn[] {this.tabledept.deptidColumn}, new global::System.Data.DataColumn[] {this.tablestocks.deptColumn}, false);
			this.Relations.Add(this.relationFK_stocks_dept);
			this.relationFK_stocks_suppliers = new global::System.Data.DataRelation("FK_stocks_suppliers", new global::System.Data.DataColumn[] {this.tablesuppliers.supcodeColumn}, new global::System.Data.DataColumn[] {this.tablestocks.supcodeColumn}, false);
			this.Relations.Add(this.relationFK_stocks_suppliers);
			this.relationFK_stocks_wsize = new global::System.Data.DataRelation("FK_stocks_wsize", new global::System.Data.DataColumn[] {this.tablewsize.sizeidColumn}, new global::System.Data.DataColumn[] {this.tablestocks.sizeidColumn}, false);
			this.Relations.Add(this.relationFK_stocks_wsize);
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private bool ShouldSerializecategories()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private bool ShouldSerializedept()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private bool ShouldSerializestocks()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private bool ShouldSerializesuppliers()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private bool ShouldSerializewsize()
		{
			return false;
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
		{
			if (e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)
			{
				this.InitVars();
			}
		}
		
		[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
		global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
		{
			dsItem ds = new dsItem();
			global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
			global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
			global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
			any.Namespace = ds.Namespace;
			sequence.Items.Add(any);
			type.Particle = sequence;
			global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
			if (xs.Contains(dsSchema.TargetNamespace))
			{
				global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
				global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
				try
				{
					global::System.Xml.Schema.XmlSchema schema = null;
					dsSchema.Write(s1);
					global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
					while (schemas.MoveNext())
					{
						schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
						s2.SetLength(0);
						schema.Write(s2);
						if (s1.Length == s2.Length)
						{
							s1.Position = 0;
							s2.Position = 0;
							
							while ((s1.Position != s1.Length) 
								&& (s1.ReadByte() == s2.ReadByte()))
							{
								
								
							}
							if (s1.Position == s1.Length)
							{
								return type;
							}
						}
						
					}
				}
				finally
				{
					if (!((s1) == null))
					{
						s1.Close();
					}
					if (!((s2) == null))
					{
						s2.Close();
					}
				}
			}
			xs.Add(dsSchema);
			return type;
		}
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public delegate void categoriesRowChangeEventHandler(object sender, categoriesRowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public delegate void deptRowChangeEventHandler(object sender, deptRowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public delegate void stocksRowChangeEventHandler(object sender, stocksRowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public delegate void suppliersRowChangeEventHandler(object sender, suppliersRowChangeEvent e);
		
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public delegate void wsizeRowChangeEventHandler(object sender, wsizeRowChangeEvent e);
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class categoriesDataTable : global::System.Data.TypedTableBase<categoriesRow>
		{
			
			private global::System.Data.DataColumn columncategoryid;
			
			private global::System.Data.DataColumn columncatgory;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public categoriesDataTable()
			{
				this.TableName = "categories";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal categoriesDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected categoriesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn categoryidColumn
			{
				get
				{
					return this.columncategoryid;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn catgoryColumn
			{
				get
				{
					return this.columncatgory;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public categoriesRow this[int index]
			{
				get
				{
					return ((categoriesRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private categoriesRowChangeEventHandler categoriesRowChangingEvent;
			public event categoriesRowChangeEventHandler categoriesRowChanging
			{
				add
				{
					categoriesRowChangingEvent = (categoriesRowChangeEventHandler) System.Delegate.Combine(categoriesRowChangingEvent, value);
				}
				remove
				{
					categoriesRowChangingEvent = (categoriesRowChangeEventHandler) System.Delegate.Remove(categoriesRowChangingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private categoriesRowChangeEventHandler categoriesRowChangedEvent;
			public event categoriesRowChangeEventHandler categoriesRowChanged
			{
				add
				{
					categoriesRowChangedEvent = (categoriesRowChangeEventHandler) System.Delegate.Combine(categoriesRowChangedEvent, value);
				}
				remove
				{
					categoriesRowChangedEvent = (categoriesRowChangeEventHandler) System.Delegate.Remove(categoriesRowChangedEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private categoriesRowChangeEventHandler categoriesRowDeletingEvent;
			public event categoriesRowChangeEventHandler categoriesRowDeleting
			{
				add
				{
					categoriesRowDeletingEvent = (categoriesRowChangeEventHandler) System.Delegate.Combine(categoriesRowDeletingEvent, value);
				}
				remove
				{
					categoriesRowDeletingEvent = (categoriesRowChangeEventHandler) System.Delegate.Remove(categoriesRowDeletingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private categoriesRowChangeEventHandler categoriesRowDeletedEvent;
			public event categoriesRowChangeEventHandler categoriesRowDeleted
			{
				add
				{
					categoriesRowDeletedEvent = (categoriesRowChangeEventHandler) System.Delegate.Combine(categoriesRowDeletedEvent, value);
				}
				remove
				{
					categoriesRowDeletedEvent = (categoriesRowChangeEventHandler) System.Delegate.Remove(categoriesRowDeletedEvent, value);
				}
			}
			
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void AddcategoriesRow(categoriesRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public categoriesRow AddcategoriesRow(string catgory)
			{
				categoriesRow rowcategoriesRow = (categoriesRow) (this.NewRow());
				object[] columnValuesArray = new object[] {null, catgory};
				rowcategoriesRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowcategoriesRow);
				return rowcategoriesRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public categoriesRow FindBycategoryid(int categoryid)
			{
				return ((categoriesRow) (this.Rows.Find(new object[] {categoryid})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				categoriesDataTable cln = (categoriesDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new categoriesDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars()
			{
				this.columncategoryid = base.Columns["categoryid"];
				this.columncatgory = base.Columns["catgory"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitClass()
			{
				this.columncategoryid = new global::System.Data.DataColumn("categoryid", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columncategoryid);
				this.columncatgory = new global::System.Data.DataColumn("catgory", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columncatgory);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columncategoryid}, true));
				this.columncategoryid.AutoIncrement = true;
				this.columncategoryid.AutoIncrementSeed = -1;
				this.columncategoryid.AutoIncrementStep = -1;
				this.columncategoryid.AllowDBNull = false;
				this.columncategoryid.ReadOnly = true;
				this.columncategoryid.Unique = true;
				this.columncatgory.MaxLength = 50;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public categoriesRow NewcategoriesRow()
			{
				return ((categoriesRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new categoriesRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(categoriesRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!((this.categoriesRowChangedEvent) == null))
				{
					if (categoriesRowChangedEvent != null)
						categoriesRowChangedEvent(this, new categoriesRowChangeEvent(((categoriesRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!((this.categoriesRowChangingEvent) == null))
				{
					if (categoriesRowChangingEvent != null)
						categoriesRowChangingEvent(this, new categoriesRowChangeEvent(((categoriesRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!((this.categoriesRowDeletedEvent) == null))
				{
					if (categoriesRowDeletedEvent != null)
						categoriesRowDeletedEvent(this, new categoriesRowChangeEvent(((categoriesRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!((this.categoriesRowDeletingEvent) == null))
				{
					if (categoriesRowDeletingEvent != null)
						categoriesRowDeletingEvent(this, new categoriesRowChangeEvent(((categoriesRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void RemovecategoriesRow(categoriesRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dsItem ds = new dsItem();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "categoriesDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!((s1) == null))
						{
							s1.Close();
						}
						if (!((s2) == null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class deptDataTable : global::System.Data.TypedTableBase<deptRow>
		{
			
			private global::System.Data.DataColumn columndeptid;
			
			private global::System.Data.DataColumn columnDEPTD;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public deptDataTable()
			{
				this.TableName = "dept";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal deptDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected deptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn deptidColumn
			{
				get
				{
					return this.columndeptid;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn DEPTDColumn
			{
				get
				{
					return this.columnDEPTD;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public deptRow this[int index]
			{
				get
				{
					return ((deptRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private deptRowChangeEventHandler deptRowChangingEvent;
			public event deptRowChangeEventHandler deptRowChanging
			{
				add
				{
					deptRowChangingEvent = (deptRowChangeEventHandler) System.Delegate.Combine(deptRowChangingEvent, value);
				}
				remove
				{
					deptRowChangingEvent = (deptRowChangeEventHandler) System.Delegate.Remove(deptRowChangingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private deptRowChangeEventHandler deptRowChangedEvent;
			public event deptRowChangeEventHandler deptRowChanged
			{
				add
				{
					deptRowChangedEvent = (deptRowChangeEventHandler) System.Delegate.Combine(deptRowChangedEvent, value);
				}
				remove
				{
					deptRowChangedEvent = (deptRowChangeEventHandler) System.Delegate.Remove(deptRowChangedEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private deptRowChangeEventHandler deptRowDeletingEvent;
			public event deptRowChangeEventHandler deptRowDeleting
			{
				add
				{
					deptRowDeletingEvent = (deptRowChangeEventHandler) System.Delegate.Combine(deptRowDeletingEvent, value);
				}
				remove
				{
					deptRowDeletingEvent = (deptRowChangeEventHandler) System.Delegate.Remove(deptRowDeletingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private deptRowChangeEventHandler deptRowDeletedEvent;
			public event deptRowChangeEventHandler deptRowDeleted
			{
				add
				{
					deptRowDeletedEvent = (deptRowChangeEventHandler) System.Delegate.Combine(deptRowDeletedEvent, value);
				}
				remove
				{
					deptRowDeletedEvent = (deptRowChangeEventHandler) System.Delegate.Remove(deptRowDeletedEvent, value);
				}
			}
			
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void AdddeptRow(deptRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public deptRow AdddeptRow(string DEPTD)
			{
				deptRow rowdeptRow = (deptRow) (this.NewRow());
				object[] columnValuesArray = new object[] {null, DEPTD};
				rowdeptRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowdeptRow);
				return rowdeptRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public deptRow FindBydeptid(int deptid)
			{
				return ((deptRow) (this.Rows.Find(new object[] {deptid})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				deptDataTable cln = (deptDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new deptDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars()
			{
				this.columndeptid = base.Columns["deptid"];
				this.columnDEPTD = base.Columns["DEPTD"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitClass()
			{
				this.columndeptid = new global::System.Data.DataColumn("deptid", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndeptid);
				this.columnDEPTD = new global::System.Data.DataColumn("DEPTD", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnDEPTD);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columndeptid}, true));
				this.columndeptid.AutoIncrement = true;
				this.columndeptid.AutoIncrementSeed = -1;
				this.columndeptid.AutoIncrementStep = -1;
				this.columndeptid.AllowDBNull = false;
				this.columndeptid.ReadOnly = true;
				this.columndeptid.Unique = true;
				this.columnDEPTD.AllowDBNull = false;
				this.columnDEPTD.MaxLength = 50;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public deptRow NewdeptRow()
			{
				return ((deptRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new deptRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(deptRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!((this.deptRowChangedEvent) == null))
				{
					if (deptRowChangedEvent != null)
						deptRowChangedEvent(this, new deptRowChangeEvent(((deptRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!((this.deptRowChangingEvent) == null))
				{
					if (deptRowChangingEvent != null)
						deptRowChangingEvent(this, new deptRowChangeEvent(((deptRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!((this.deptRowDeletedEvent) == null))
				{
					if (deptRowDeletedEvent != null)
						deptRowDeletedEvent(this, new deptRowChangeEvent(((deptRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!((this.deptRowDeletingEvent) == null))
				{
					if (deptRowDeletingEvent != null)
						deptRowDeletingEvent(this, new deptRowChangeEvent(((deptRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void RemovedeptRow(deptRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dsItem ds = new dsItem();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "deptDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!((s1) == null))
						{
							s1.Close();
						}
						if (!((s2) == null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class stocksDataTable : global::System.Data.TypedTableBase<stocksRow>
		{
			
			private global::System.Data.DataColumn columnstckid;
			
			private global::System.Data.DataColumn columnbarcode;
			
			private global::System.Data.DataColumn columnitem_desc;
			
			private global::System.Data.DataColumn columnsupcode;
			
			private global::System.Data.DataColumn columncategoryid;
			
			private global::System.Data.DataColumn columndept;
			
			private global::System.Data.DataColumn columncost;
			
			private global::System.Data.DataColumn columnretail;
			
			private global::System.Data.DataColumn columnretail2;
			
			private global::System.Data.DataColumn columnminimum;
			
			private global::System.Data.DataColumn columnmaximum;
			
			private global::System.Data.DataColumn columnsizeid;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksDataTable()
			{
				this.TableName = "stocks";
				this.BeginInit()();
				this.InitClass();
				this.EndInit()();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal stocksDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected stocksDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn stckidColumn
			{
				get
				{
					return this.columnstckid;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn barcodeColumn
			{
				get
				{
					return this.columnbarcode;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn item_descColumn
			{
				get
				{
					return this.columnitem_desc;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn supcodeColumn
			{
				get
				{
					return this.columnsupcode;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn categoryidColumn
			{
				get
				{
					return this.columncategoryid;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn deptColumn
			{
				get
				{
					return this.columndept;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn costColumn
			{
				get
				{
					return this.columncost;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn retailColumn
			{
				get
				{
					return this.columnretail;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn retail2Column
			{
				get
				{
					return this.columnretail2;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn minimumColumn
			{
				get
				{
					return this.columnminimum;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn maximumColumn
			{
				get
				{
					return this.columnmaximum;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn sizeidColumn
			{
				get
				{
					return this.columnsizeid;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRow this[int index]
			{
				get
				{
					return ((stocksRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private stocksRowChangeEventHandler stocksRowChangingEvent;
			public event stocksRowChangeEventHandler stocksRowChanging
			{
				add
				{
					stocksRowChangingEvent = (stocksRowChangeEventHandler) System.Delegate.Combine(stocksRowChangingEvent, value);
				}
				remove
				{
					stocksRowChangingEvent = (stocksRowChangeEventHandler) System.Delegate.Remove(stocksRowChangingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private stocksRowChangeEventHandler stocksRowChangedEvent;
			public event stocksRowChangeEventHandler stocksRowChanged
			{
				add
				{
					stocksRowChangedEvent = (stocksRowChangeEventHandler) System.Delegate.Combine(stocksRowChangedEvent, value);
				}
				remove
				{
					stocksRowChangedEvent = (stocksRowChangeEventHandler) System.Delegate.Remove(stocksRowChangedEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private stocksRowChangeEventHandler stocksRowDeletingEvent;
			public event stocksRowChangeEventHandler stocksRowDeleting
			{
				add
				{
					stocksRowDeletingEvent = (stocksRowChangeEventHandler) System.Delegate.Combine(stocksRowDeletingEvent, value);
				}
				remove
				{
					stocksRowDeletingEvent = (stocksRowChangeEventHandler) System.Delegate.Remove(stocksRowDeletingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private stocksRowChangeEventHandler stocksRowDeletedEvent;
			public event stocksRowChangeEventHandler stocksRowDeleted
			{
				add
				{
					stocksRowDeletedEvent = (stocksRowChangeEventHandler) System.Delegate.Combine(stocksRowDeletedEvent, value);
				}
				remove
				{
					stocksRowDeletedEvent = (stocksRowChangeEventHandler) System.Delegate.Remove(stocksRowDeletedEvent, value);
				}
			}
			
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void AddstocksRow(stocksRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRow AddstocksRow(string barcode, string item_desc, suppliersRow parentsuppliersRowByFK_stocks_suppliers, categoriesRow parentcategoriesRowByFK_stocks_categories, deptRow parentdeptRowByFK_stocks_dept, decimal cost, decimal retail, decimal retail2, double minimum, double maximum, wsizeRow parentwsizeRowByFK_stocks_wsize)
			{
				stocksRow rowstocksRow = (stocksRow) (this.NewRow());
				object[] columnValuesArray = new object[] {null, barcode, item_desc, null, null, null, cost, retail, retail2, minimum, maximum, null};
				if (!((parentsuppliersRowByFK_stocks_suppliers) == null))
				{
					columnValuesArray[3] = parentsuppliersRowByFK_stocks_suppliers(0);
				}
				if (!((parentcategoriesRowByFK_stocks_categories) == null))
				{
					columnValuesArray[4] = parentcategoriesRowByFK_stocks_categories(0);
				}
				if (!((parentdeptRowByFK_stocks_dept) == null))
				{
					columnValuesArray[5] = parentdeptRowByFK_stocks_dept(0);
				}
				if (!((parentwsizeRowByFK_stocks_wsize) == null))
				{
					columnValuesArray[11] = parentwsizeRowByFK_stocks_wsize(0);
				}
				rowstocksRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowstocksRow);
				return rowstocksRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRow FindBystckid(int stckid)
			{
				return ((stocksRow) (this.Rows.Find(new object[] {stckid})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				stocksDataTable cln = (stocksDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new stocksDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars()
			{
				this.columnstckid = base.Columns["stckid"];
				this.columnbarcode = base.Columns["barcode"];
				this.columnitem_desc = base.Columns["item_desc"];
				this.columnsupcode = base.Columns["supcode"];
				this.columncategoryid = base.Columns["categoryid"];
				this.columndept = base.Columns["dept"];
				this.columncost = base.Columns["cost"];
				this.columnretail = base.Columns["retail"];
				this.columnretail2 = base.Columns["retail2"];
				this.columnminimum = base.Columns["minimum"];
				this.columnmaximum = base.Columns["maximum"];
				this.columnsizeid = base.Columns["sizeid"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitClass()
			{
				this.columnstckid = new global::System.Data.DataColumn("stckid", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnstckid);
				this.columnbarcode = new global::System.Data.DataColumn("barcode", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnbarcode);
				this.columnitem_desc = new global::System.Data.DataColumn("item_desc", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnitem_desc);
				this.columnsupcode = new global::System.Data.DataColumn("supcode", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsupcode);
				this.columncategoryid = new global::System.Data.DataColumn("categoryid", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columncategoryid);
				this.columndept = new global::System.Data.DataColumn("dept", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columndept);
				this.columncost = new global::System.Data.DataColumn("cost", typeof(decimal), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columncost);
				this.columnretail = new global::System.Data.DataColumn("retail", typeof(decimal), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnretail);
				this.columnretail2 = new global::System.Data.DataColumn("retail2", typeof(decimal), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnretail2);
				this.columnminimum = new global::System.Data.DataColumn("minimum", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnminimum);
				this.columnmaximum = new global::System.Data.DataColumn("maximum", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnmaximum);
				this.columnsizeid = new global::System.Data.DataColumn("sizeid", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsizeid);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnstckid}, true));
				this.columnstckid.AutoIncrement = true;
				this.columnstckid.AutoIncrementSeed = -1;
				this.columnstckid.AutoIncrementStep = -1;
				this.columnstckid.AllowDBNull = false;
				this.columnstckid.ReadOnly = true;
				this.columnstckid.Unique = true;
				this.columnbarcode.AllowDBNull = false;
				this.columnbarcode.MaxLength = 22;
				this.columnitem_desc.AllowDBNull = false;
				this.columnitem_desc.MaxLength = 100;
				this.columncost.AllowDBNull = false;
				this.columnretail.AllowDBNull = false;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRow NewstocksRow()
			{
				return ((stocksRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new stocksRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(stocksRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!((this.stocksRowChangedEvent) == null))
				{
					if (stocksRowChangedEvent != null)
						stocksRowChangedEvent(this, new stocksRowChangeEvent(((stocksRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!((this.stocksRowChangingEvent) == null))
				{
					if (stocksRowChangingEvent != null)
						stocksRowChangingEvent(this, new stocksRowChangeEvent(((stocksRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!((this.stocksRowDeletedEvent) == null))
				{
					if (stocksRowDeletedEvent != null)
						stocksRowDeletedEvent(this, new stocksRowChangeEvent(((stocksRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!((this.stocksRowDeletingEvent) == null))
				{
					if (stocksRowDeletingEvent != null)
						stocksRowDeletingEvent(this, new stocksRowChangeEvent(((stocksRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void RemovestocksRow(stocksRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dsItem ds = new dsItem();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "stocksDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!((s1) == null))
						{
							s1.Close();
						}
						if (!((s2) == null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class suppliersDataTable : global::System.Data.TypedTableBase<suppliersRow>
		{
			
			private global::System.Data.DataColumn columnsupcode;
			
			private global::System.Data.DataColumn columnsupplier;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersDataTable()
			{
				this.TableName = "suppliers";
				this.BeginInit()();
				this.InitClass();
				this.EndInit()();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal suppliersDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected suppliersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn supcodeColumn
			{
				get
				{
					return this.columnsupcode;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn supplierColumn
			{
				get
				{
					return this.columnsupplier;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow this[int index]
			{
				get
				{
					return ((suppliersRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private suppliersRowChangeEventHandler suppliersRowChangingEvent;
			public event suppliersRowChangeEventHandler suppliersRowChanging
			{
				add
				{
					suppliersRowChangingEvent = (suppliersRowChangeEventHandler) System.Delegate.Combine(suppliersRowChangingEvent, value);
				}
				remove
				{
					suppliersRowChangingEvent = (suppliersRowChangeEventHandler) System.Delegate.Remove(suppliersRowChangingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private suppliersRowChangeEventHandler suppliersRowChangedEvent;
			public event suppliersRowChangeEventHandler suppliersRowChanged
			{
				add
				{
					suppliersRowChangedEvent = (suppliersRowChangeEventHandler) System.Delegate.Combine(suppliersRowChangedEvent, value);
				}
				remove
				{
					suppliersRowChangedEvent = (suppliersRowChangeEventHandler) System.Delegate.Remove(suppliersRowChangedEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private suppliersRowChangeEventHandler suppliersRowDeletingEvent;
			public event suppliersRowChangeEventHandler suppliersRowDeleting
			{
				add
				{
					suppliersRowDeletingEvent = (suppliersRowChangeEventHandler) System.Delegate.Combine(suppliersRowDeletingEvent, value);
				}
				remove
				{
					suppliersRowDeletingEvent = (suppliersRowChangeEventHandler) System.Delegate.Remove(suppliersRowDeletingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private suppliersRowChangeEventHandler suppliersRowDeletedEvent;
			public event suppliersRowChangeEventHandler suppliersRowDeleted
			{
				add
				{
					suppliersRowDeletedEvent = (suppliersRowChangeEventHandler) System.Delegate.Combine(suppliersRowDeletedEvent, value);
				}
				remove
				{
					suppliersRowDeletedEvent = (suppliersRowChangeEventHandler) System.Delegate.Remove(suppliersRowDeletedEvent, value);
				}
			}
			
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void AddsuppliersRow(suppliersRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow AddsuppliersRow(string supplier)
			{
				suppliersRow rowsuppliersRow = (suppliersRow) (this.NewRow());
				object[] columnValuesArray = new object[] {null, supplier};
				rowsuppliersRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowsuppliersRow);
				return rowsuppliersRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow FindBysupcode(int supcode)
			{
				return ((suppliersRow) (this.Rows.Find(new object[] {supcode})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				suppliersDataTable cln = (suppliersDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new suppliersDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars()
			{
				this.columnsupcode = base.Columns["supcode"];
				this.columnsupplier = base.Columns["supplier"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitClass()
			{
				this.columnsupcode = new global::System.Data.DataColumn("supcode", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsupcode);
				this.columnsupplier = new global::System.Data.DataColumn("supplier", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsupplier);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnsupcode}, true));
				this.columnsupcode.AutoIncrement = true;
				this.columnsupcode.AutoIncrementSeed = -1;
				this.columnsupcode.AutoIncrementStep = -1;
				this.columnsupcode.AllowDBNull = false;
				this.columnsupcode.ReadOnly = true;
				this.columnsupcode.Unique = true;
				this.columnsupplier.AllowDBNull = false;
				this.columnsupplier.MaxLength = 50;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow NewsuppliersRow()
			{
				return ((suppliersRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new suppliersRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(suppliersRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!((this.suppliersRowChangedEvent) == null))
				{
					if (suppliersRowChangedEvent != null)
						suppliersRowChangedEvent(this, new suppliersRowChangeEvent(((suppliersRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!((this.suppliersRowChangingEvent) == null))
				{
					if (suppliersRowChangingEvent != null)
						suppliersRowChangingEvent(this, new suppliersRowChangeEvent(((suppliersRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!((this.suppliersRowDeletedEvent) == null))
				{
					if (suppliersRowDeletedEvent != null)
						suppliersRowDeletedEvent(this, new suppliersRowChangeEvent(((suppliersRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!((this.suppliersRowDeletingEvent) == null))
				{
					if (suppliersRowDeletingEvent != null)
						suppliersRowDeletingEvent(this, new suppliersRowChangeEvent(((suppliersRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void RemovesuppliersRow(suppliersRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dsItem ds = new dsItem();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "suppliersDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!((s1) == null))
						{
							s1.Close();
						}
						if (!((s2) == null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable(), 
		global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]public 
		partial class wsizeDataTable : global::System.Data.TypedTableBase<wsizeRow>
		{
			
			private global::System.Data.DataColumn columnsizeid;
			
			private global::System.Data.DataColumn columnsayz;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public wsizeDataTable()
			{
				this.TableName = "wsize";
				this.BeginInit()();
				this.InitClass();
				this.EndInit()();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal wsizeDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if (table.CaseSensitive != table.DataSet.CaseSensitive)
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if (table.Locale.ToString() != table.DataSet.Locale.ToString())
				{
					this.Locale = table.Locale;
				}
				if (table.Namespace != table.DataSet.Namespace)
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected wsizeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : base(info, context)
			{
				this.InitVars();
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn sizeidColumn
			{
				get
				{
					return this.columnsizeid;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataColumn sayzColumn
			{
				get
				{
					return this.columnsayz;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public wsizeRow this[int index]
			{
				get
				{
					return ((wsizeRow) (this.Rows[index]));
				}
			}
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private wsizeRowChangeEventHandler wsizeRowChangingEvent;
			public event wsizeRowChangeEventHandler wsizeRowChanging
			{
				add
				{
					wsizeRowChangingEvent = (wsizeRowChangeEventHandler) System.Delegate.Combine(wsizeRowChangingEvent, value);
				}
				remove
				{
					wsizeRowChangingEvent = (wsizeRowChangeEventHandler) System.Delegate.Remove(wsizeRowChangingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private wsizeRowChangeEventHandler wsizeRowChangedEvent;
			public event wsizeRowChangeEventHandler wsizeRowChanged
			{
				add
				{
					wsizeRowChangedEvent = (wsizeRowChangeEventHandler) System.Delegate.Combine(wsizeRowChangedEvent, value);
				}
				remove
				{
					wsizeRowChangedEvent = (wsizeRowChangeEventHandler) System.Delegate.Remove(wsizeRowChangedEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private wsizeRowChangeEventHandler wsizeRowDeletingEvent;
			public event wsizeRowChangeEventHandler wsizeRowDeleting
			{
				add
				{
					wsizeRowDeletingEvent = (wsizeRowChangeEventHandler) System.Delegate.Combine(wsizeRowDeletingEvent, value);
				}
				remove
				{
					wsizeRowDeletingEvent = (wsizeRowChangeEventHandler) System.Delegate.Remove(wsizeRowDeletingEvent, value);
				}
			}
			
			
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private wsizeRowChangeEventHandler wsizeRowDeletedEvent;
			public event wsizeRowChangeEventHandler wsizeRowDeleted
			{
				add
				{
					wsizeRowDeletedEvent = (wsizeRowChangeEventHandler) System.Delegate.Combine(wsizeRowDeletedEvent, value);
				}
				remove
				{
					wsizeRowDeletedEvent = (wsizeRowChangeEventHandler) System.Delegate.Remove(wsizeRowDeletedEvent, value);
				}
			}
			
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void AddwsizeRow(wsizeRow row)
			{
				this.Rows.Add(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public wsizeRow AddwsizeRow(string sayz)
			{
				wsizeRow rowwsizeRow = (wsizeRow) (this.NewRow());
				object[] columnValuesArray = new object[] {null, sayz};
				rowwsizeRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowwsizeRow);
				return rowwsizeRow;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public wsizeRow FindBysizeid(int sizeid)
			{
				return ((wsizeRow) (this.Rows.Find(new object[] {sizeid})));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public override global::System.Data.DataTable Clone()
			{
				wsizeDataTable cln = (wsizeDataTable) (base.Clone());
				cln.InitVars();
				return cln;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataTable CreateInstance()
			{
				return new wsizeDataTable();
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal void InitVars()
			{
				this.columnsizeid = base.Columns["sizeid"];
				this.columnsayz = base.Columns["sayz"];
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitClass()
			{
				this.columnsizeid = new global::System.Data.DataColumn("sizeid", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsizeid);
				this.columnsayz = new global::System.Data.DataColumn("sayz", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnsayz);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {this.columnsizeid}, true));
				this.columnsizeid.AutoIncrement = true;
				this.columnsizeid.AutoIncrementSeed = -1;
				this.columnsizeid.AutoIncrementStep = -1;
				this.columnsizeid.AllowDBNull = false;
				this.columnsizeid.ReadOnly = true;
				this.columnsizeid.Unique = true;
				this.columnsayz.MaxLength = 50;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public wsizeRow NewwsizeRow()
			{
				return ((wsizeRow) (this.NewRow()));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new wsizeRow(builder);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override global::System.Type GetRowType()
			{
				return typeof(wsizeRow);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if (!((this.wsizeRowChangedEvent) == null))
				{
					if (wsizeRowChangedEvent != null)
						wsizeRowChangedEvent(this, new wsizeRowChangeEvent(((wsizeRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if (!((this.wsizeRowChangingEvent) == null))
				{
					if (wsizeRowChangingEvent != null)
						wsizeRowChangingEvent(this, new wsizeRowChangeEvent(((wsizeRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if (!((this.wsizeRowDeletedEvent) == null))
				{
					if (wsizeRowDeletedEvent != null)
						wsizeRowDeletedEvent(this, new wsizeRowChangeEvent(((wsizeRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if (!((this.wsizeRowDeletingEvent) == null))
				{
					if (wsizeRowDeletingEvent != null)
						wsizeRowDeletingEvent(this, new wsizeRowChangeEvent(((wsizeRow) e.Row), e.Action));
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void RemovewsizeRow(wsizeRow row)
			{
				this.Rows.Remove(row);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				dsItem ds = new dsItem();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "wsizeDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator();
						while (schemas.MoveNext())
						{
							schema = (global::System.Xml.Schema.XmlSchema) schemas.Current;
							s2.SetLength(0);
							schema.Write(s2);
							if (s1.Length == s2.Length)
							{
								s1.Position = 0;
								s2.Position = 0;
								
								while ((s1.Position != s1.Length) 
									&& (s1.ReadByte() == s2.ReadByte()))
								{
									
									
								}
								if (s1.Position == s1.Length)
								{
									return type;
								}
							}
							
						}
					}
					finally
					{
						if (!((s1) == null))
						{
							s1.Close();
						}
						if (!((s2) == null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class categoriesRow : global::System.Data.DataRow
		{
			
			private categoriesDataTable tablecategories;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal categoriesRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tablecategories = (categoriesDataTable) this.Table;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int categoryid
			{
				get
				{
					return System.Convert.ToInt32(this[this.tablecategories.categoryidColumn]);
				}
				set
				{
					this[this.tablecategories.categoryidColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string catgory
			{
				get
				{
					try
					{
						return System.Convert.ToString(this[this.tablecategories.catgoryColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'catgory\' in table \'categories\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablecategories.catgoryColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IscatgoryNull()
			{
				return this.IsNull(this.tablecategories.catgoryColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetcatgoryNull()
			{
				this[this.tablecategories.catgoryColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRow[] GetstocksRows()
			{
				if (this.Table.ChildRelations["FK_stocks_categories"] == null)
				{
					return new stocksRow[0];
				}
				else
				{
					return ((stocksRow[]) (base.GetChildRows(this.Table.ChildRelations["FK_stocks_categories"])));
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class deptRow : global::System.Data.DataRow
		{
			
			private deptDataTable tabledept;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal deptRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tabledept = (deptDataTable) this.Table;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int deptid
			{
				get
				{
					return System.Convert.ToInt32(this[this.tabledept.deptidColumn]);
				}
				set
				{
					this[this.tabledept.deptidColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string DEPTD
			{
				get
				{
					return System.Convert.ToString(this[this.tabledept.DEPTDColumn]);
				}
				set
				{
					this[this.tabledept.DEPTDColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRow[] GetstocksRows()
			{
				if (this.Table.ChildRelations["FK_stocks_dept"] == null)
				{
					return new stocksRow[0];
				}
				else
				{
					return ((stocksRow[]) (base.GetChildRows(this.Table.ChildRelations["FK_stocks_dept"])));
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class stocksRow : global::System.Data.DataRow
		{
			
			private stocksDataTable tablestocks;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal stocksRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tablestocks = (stocksDataTable) this.Table;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int stckid
			{
				get
				{
					return System.Convert.ToInt32(this[this.tablestocks.stckidColumn]);
				}
				set
				{
					this[this.tablestocks.stckidColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string barcode
			{
				get
				{
					return System.Convert.ToString(this[this.tablestocks.barcodeColumn]);
				}
				set
				{
					this[this.tablestocks.barcodeColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string item_desc
			{
				get
				{
					return System.Convert.ToString(this[this.tablestocks.item_descColumn]);
				}
				set
				{
					this[this.tablestocks.item_descColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int supcode
			{
				get
				{
					try
					{
						return System.Convert.ToInt32(this[this.tablestocks.supcodeColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'supcode\' in table \'stocks\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablestocks.supcodeColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int categoryid
			{
				get
				{
					try
					{
						return System.Convert.ToInt32(this[this.tablestocks.categoryidColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'categoryid\' in table \'stocks\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablestocks.categoryidColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int dept
			{
				get
				{
					try
					{
						return System.Convert.ToInt32(this[this.tablestocks.deptColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'dept\' in table \'stocks\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablestocks.deptColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public decimal cost
			{
				get
				{
					return System.Convert.ToDecimal(this[this.tablestocks.costColumn]);
				}
				set
				{
					this[this.tablestocks.costColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public decimal retail
			{
				get
				{
					return System.Convert.ToDecimal(this[this.tablestocks.retailColumn]);
				}
				set
				{
					this[this.tablestocks.retailColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public decimal retail2
			{
				get
				{
					try
					{
						return System.Convert.ToDecimal(this[this.tablestocks.retail2Column]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'retail2\' in table \'stocks\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablestocks.retail2Column] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public double minimum
			{
				get
				{
					try
					{
						return System.Convert.ToDouble(this[this.tablestocks.minimumColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'minimum\' in table \'stocks\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablestocks.minimumColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public double maximum
			{
				get
				{
					try
					{
						return System.Convert.ToDouble(this[this.tablestocks.maximumColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'maximum\' in table \'stocks\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablestocks.maximumColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int sizeid
			{
				get
				{
					try
					{
						return System.Convert.ToInt32(this[this.tablestocks.sizeidColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'sizeid\' in table \'stocks\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablestocks.sizeidColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public categoriesRow categoriesRow
			{
				get
				{
					return ((categoriesRow) (this.GetParentRow(this.Table.ParentRelations["FK_stocks_categories"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_stocks_categories"]);
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public deptRow deptRow
			{
				get
				{
					return ((deptRow) (this.GetParentRow(this.Table.ParentRelations["FK_stocks_dept"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_stocks_dept"]);
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow suppliersRow
			{
				get
				{
					return ((suppliersRow) (this.GetParentRow(this.Table.ParentRelations["FK_stocks_suppliers"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_stocks_suppliers"]);
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public wsizeRow wsizeRow
			{
				get
				{
					return ((wsizeRow) (this.GetParentRow(this.Table.ParentRelations["FK_stocks_wsize"])));
				}
				set
				{
					this.SetParentRow(value, this.Table.ParentRelations["FK_stocks_wsize"]);
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IssupcodeNull()
			{
				return this.IsNull(this.tablestocks.supcodeColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetsupcodeNull()
			{
				this[this.tablestocks.supcodeColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IscategoryidNull()
			{
				return this.IsNull(this.tablestocks.categoryidColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetcategoryidNull()
			{
				this[this.tablestocks.categoryidColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IsdeptNull()
			{
				return this.IsNull(this.tablestocks.deptColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetdeptNull()
			{
				this[this.tablestocks.deptColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool Isretail2Null()
			{
				return this.IsNull(this.tablestocks.retail2Column);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void Setretail2Null()
			{
				this[this.tablestocks.retail2Column] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IsminimumNull()
			{
				return this.IsNull(this.tablestocks.minimumColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetminimumNull()
			{
				this[this.tablestocks.minimumColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IsmaximumNull()
			{
				return this.IsNull(this.tablestocks.maximumColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetmaximumNull()
			{
				this[this.tablestocks.maximumColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IssizeidNull()
			{
				return this.IsNull(this.tablestocks.sizeidColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetsizeidNull()
			{
				this[this.tablestocks.sizeidColumn] = global::System.Convert.DBNull;
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class suppliersRow : global::System.Data.DataRow
		{
			
			private suppliersDataTable tablesuppliers;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal suppliersRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tablesuppliers = (suppliersDataTable) this.Table;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int supcode
			{
				get
				{
					return System.Convert.ToInt32(this[this.tablesuppliers.supcodeColumn]);
				}
				set
				{
					this[this.tablesuppliers.supcodeColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string supplier
			{
				get
				{
					return System.Convert.ToString(this[this.tablesuppliers.supplierColumn]);
				}
				set
				{
					this[this.tablesuppliers.supplierColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRow[] GetstocksRows()
			{
				if (this.Table.ChildRelations["FK_stocks_suppliers"] == null)
				{
					return new stocksRow[0];
				}
				else
				{
					return ((stocksRow[]) (base.GetChildRows(this.Table.ChildRelations["FK_stocks_suppliers"])));
				}
			}
		}
		
		///<summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class wsizeRow : global::System.Data.DataRow
		{
			
			private wsizeDataTable tablewsize;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal wsizeRow(global::System.Data.DataRowBuilder rb) : base(rb)
			{
				this.tablewsize = (wsizeDataTable) this.Table;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int sizeid
			{
				get
				{
					return System.Convert.ToInt32(this[this.tablewsize.sizeidColumn]);
				}
				set
				{
					this[this.tablewsize.sizeidColumn] = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public string sayz
			{
				get
				{
					try
					{
						return System.Convert.ToString(this[this.tablewsize.sayzColumn]);
					}
					catch (global::System.InvalidCastException e)
					{
						throw (new global::System.Data.StrongTypingException("The value for column \'sayz\' in table \'wsize\' is DBNull.", e));
					}
				}
				set
				{
					this[this.tablewsize.sayzColumn] = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool IssayzNull()
			{
				return this.IsNull(this.tablewsize.sayzColumn);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public void SetsayzNull()
			{
				this[this.tablewsize.sayzColumn] = global::System.Convert.DBNull;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRow[] GetstocksRows()
			{
				if (this.Table.ChildRelations["FK_stocks_wsize"] == null)
				{
					return new stocksRow[0];
				}
				else
				{
					return ((stocksRow[]) (base.GetChildRows(this.Table.ChildRelations["FK_stocks_wsize"])));
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public class categoriesRowChangeEvent : global::System.EventArgs
		{
			
			private categoriesRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public categoriesRowChangeEvent(categoriesRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public categoriesRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public class deptRowChangeEvent : global::System.EventArgs
		{
			
			private deptRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public deptRowChangeEvent(deptRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public deptRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public class stocksRowChangeEvent : global::System.EventArgs
		{
			
			private stocksRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRowChangeEvent(stocksRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public class suppliersRowChangeEvent : global::System.EventArgs
		{
			
			private suppliersRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRowChangeEvent(suppliersRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
		
		///<summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public class wsizeRowChangeEvent : global::System.EventArgs
		{
			
			private wsizeRow eventRow;
			
			private global::System.Data.DataRowAction eventAction;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public wsizeRowChangeEvent(wsizeRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public wsizeRow Row
			{
				get
				{
					return this.eventRow;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
	}
	
	namespace dsItemTableAdapters
	{
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class categoriesTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public categoriesTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!((this.Adapter.InsertCommand) == null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!((this.Adapter.DeleteCommand) == null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!((this.Adapter.UpdateCommand) == null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!((this.CommandCollection[i]) == null))
						{
							((global::System.Data.SqlClient.SqlCommand) (this.CommandCollection[i])).Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.DeleteCommand) == null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.InsertCommand) == null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.UpdateCommand) == null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "categories";
				tableMapping.ColumnMappings.Add("categoryid", "categoryid");
				tableMapping.ColumnMappings.Add("catgory", "catgory");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[categories] WHERE (([categoryid] = @Original_categoryid) AND (" + 
					"(@IsNull_catgory = 1 AND [catgory] IS NULL) OR ([catgory] = @Original_catgory)))" + 
					"";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_categoryid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "categoryid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_catgory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "catgory", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_catgory", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "catgory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[categories] ([catgory]) VALUES (@catgory);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT categoryid," + 
					" catgory FROM categories WHERE (categoryid = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@catgory", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "catgory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[categories] SET [catgory] = @catgory WHERE (([categoryid] = @Origin" + 
					"al_categoryid) AND ((@IsNull_catgory = 1 AND [catgory] IS NULL) OR ([catgory] = " + 
					"@Original_catgory)));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT categoryid, catgory FROM categories WHERE (categor" + 
					"yid = @categoryid)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@catgory", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "catgory", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_categoryid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "categoryid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_catgory", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "catgory", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_catgory", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "catgory", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@categoryid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "categoryid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::DoorsPOS.WinApp.My.Settings.Default.doorsposConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT categoryid, catgory FROM dbo.categories";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dsItem.categoriesDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dsItem.categoriesDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dsItem.categoriesDataTable dataTable = new dsItem.categoriesDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem.categoriesDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem dataSet)
			{
				return this.Adapter.Update(dataSet, "categories");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(int Original_categoryid, string Original_catgory)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToInt32(Original_categoryid);
				if (Original_catgory == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[2].Value = System.Convert.ToString(Original_catgory);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string catgory)
			{
				if (catgory == null)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(catgory);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string catgory, int Original_categoryid, string Original_catgory, int categoryid)
			{
				if (catgory == null)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(catgory);
				}
				this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToInt32(Original_categoryid);
				if (Original_catgory == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToString(Original_catgory);
				}
				this.Adapter.UpdateCommand.Parameters[4].Value = System.Convert.ToInt32(categoryid);
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string catgory, int Original_categoryid, string Original_catgory)
			{
				return this.Update(catgory, Original_categoryid, Original_catgory, Original_categoryid);
			}
		}
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class deptTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public deptTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!((this.Adapter.InsertCommand) == null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!((this.Adapter.DeleteCommand) == null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!((this.Adapter.UpdateCommand) == null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!((this.CommandCollection[i]) == null))
						{
							((global::System.Data.SqlClient.SqlCommand) (this.CommandCollection[i])).Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.DeleteCommand) == null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.InsertCommand) == null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.UpdateCommand) == null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "dept";
				tableMapping.ColumnMappings.Add("deptid", "deptid");
				tableMapping.ColumnMappings.Add("DEPTD", "DEPTD");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[dept] WHERE (([deptid] = @Original_deptid) AND ([DEPTD] = @Ori" + 
					"ginal_DEPTD))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_deptid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "deptid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "DEPTD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[dept] ([DEPTD]) VALUES (@DEPTD);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT deptid, DEPTD FROM de" + 
					"pt WHERE (deptid = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "DEPTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[dept] SET [DEPTD] = @DEPTD WHERE (([deptid] = @Original_deptid) AND" + 
					" ([DEPTD] = @Original_DEPTD));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT deptid, DEPTD FROM dept WHERE (deptid = @" + 
					"deptid)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "DEPTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_deptid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "deptid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTD", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "DEPTD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@deptid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "deptid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::DoorsPOS.WinApp.My.Settings.Default.doorsposConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT deptid, DEPTD FROM dbo.dept";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dsItem.deptDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dsItem.deptDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dsItem.deptDataTable dataTable = new dsItem.deptDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem.deptDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem dataSet)
			{
				return this.Adapter.Update(dataSet, "dept");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(int Original_deptid, string Original_DEPTD)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToInt32(Original_deptid);
				if (Original_DEPTD == null)
				{
					throw (new global::System.ArgumentNullException("Original_DEPTD"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = System.Convert.ToString(Original_DEPTD);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string DEPTD)
			{
				if (DEPTD == null)
				{
					throw (new global::System.ArgumentNullException("DEPTD"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(DEPTD);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string DEPTD, int Original_deptid, string Original_DEPTD, int deptid)
			{
				if (DEPTD == null)
				{
					throw (new global::System.ArgumentNullException("DEPTD"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(DEPTD);
				}
				this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToInt32(Original_deptid);
				if (Original_DEPTD == null)
				{
					throw (new global::System.ArgumentNullException("Original_DEPTD"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = System.Convert.ToString(Original_DEPTD);
				}
				this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToInt32(deptid);
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string DEPTD, int Original_deptid, string Original_DEPTD)
			{
				return this.Update(DEPTD, Original_deptid, Original_DEPTD, Original_deptid);
			}
		}
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class stocksTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public stocksTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!((this.Adapter.InsertCommand) == null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!((this.Adapter.DeleteCommand) == null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!((this.Adapter.UpdateCommand) == null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!((this.CommandCollection[i]) == null))
						{
							((global::System.Data.SqlClient.SqlCommand) (this.CommandCollection[i])).Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.DeleteCommand) == null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.InsertCommand) == null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.UpdateCommand) == null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "stocks";
				tableMapping.ColumnMappings.Add("stckid", "stckid");
				tableMapping.ColumnMappings.Add("barcode", "barcode");
				tableMapping.ColumnMappings.Add("item_desc", "item_desc");
				tableMapping.ColumnMappings.Add("supcode", "supcode");
				tableMapping.ColumnMappings.Add("categoryid", "categoryid");
				tableMapping.ColumnMappings.Add("dept", "dept");
				tableMapping.ColumnMappings.Add("cost", "cost");
				tableMapping.ColumnMappings.Add("retail", "retail");
				tableMapping.ColumnMappings.Add("retail2", "retail2");
				tableMapping.ColumnMappings.Add("minimum", "minimum");
				tableMapping.ColumnMappings.Add("maximum", "maximum");
				tableMapping.ColumnMappings.Add("sizeid", "sizeid");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [stocks] WHERE (([barcode] = @Original_barcode) AND ([item_desc] = @O" + 
					"riginal_item_desc) AND ((@IsNull_supcode = 1 AND [supcode] IS NULL) OR ([supcode" + 
					"] = @Original_supcode)) AND ((@IsNull_categoryid = 1 AND [categoryid] IS NULL) O" + 
					"R ([categoryid] = @Original_categoryid)) AND ((@IsNull_dept = 1 AND [dept] IS NU" + 
					"LL) OR ([dept] = @Original_dept)) AND ([cost] = @Original_cost) AND ([retail] = " + 
					"@Original_retail) AND ((@IsNull_retail2 = 1 AND [retail2] IS NULL) OR ([retail2]" + 
					" = @Original_retail2)) AND ((@IsNull_maximum = 1 AND [maximum] IS NULL) OR ([max" + 
					"imum] = @Original_maximum)) AND ((@IsNull_minimum = 1 AND [minimum] IS NULL) OR " + 
					"([minimum] = @Original_minimum)) AND ((@IsNull_sizeid = 1 AND [sizeid] IS NULL) " + 
					"OR ([sizeid] = @Original_sizeid)) AND ([stckid] = @Original_stckid))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_barcode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "barcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_item_desc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "item_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_categoryid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "categoryid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_categoryid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "categoryid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dept", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "dept", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dept", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_retail", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_retail2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_retail2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_maximum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "maximum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_maximum", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "maximum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_minimum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "minimum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_minimum", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "minimum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sizeid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sizeid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sizeid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sizeid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stckid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "stckid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [stocks] ([barcode], [item_desc], [supcode], [categoryid], [dept], [c" + 
					"ost], [retail], [retail2], [maximum], [minimum], [sizeid]) VALUES (@barcode, @it" + 
					"em_desc, @supcode, @categoryid, @dept, @cost, @retail, @retail2, @maximum, @mini" + 
					"mum, @sizeid);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT barcode, item_desc, supcode, categoryid, dept, cost, reta" + 
					"il, retail2, maximum, minimum, sizeid, stckid FROM stocks WHERE (stckid = SCOPE_" + 
					"IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@barcode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "barcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@item_desc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "item_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@categoryid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "categoryid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dept", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@retail", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@retail2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@maximum", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "maximum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@minimum", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "minimum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sizeid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sizeid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [stocks] SET [barcode] = @barcode, [item_desc] = @item_desc, [supcode] = @" + 
					"supcode, [categoryid] = @categoryid, [dept] = @dept, [cost] = @cost, [retail] = " + 
					"@retail, [retail2] = @retail2, [maximum] = @maximum, [minimum] = @minimum, [size" + 
					"id] = @sizeid WHERE (([barcode] = @Original_barcode) AND ([item_desc] = @Origina" + 
					"l_item_desc) AND ((@IsNull_supcode = 1 AND [supcode] IS NULL) OR ([supcode] = @O" + 
					"riginal_supcode)) AND ((@IsNull_categoryid = 1 AND [categoryid] IS NULL) OR ([ca" + 
					"tegoryid] = @Original_categoryid)) AND ((@IsNull_dept = 1 AND [dept] IS NULL) OR" + 
					" ([dept] = @Original_dept)) AND ([cost] = @Original_cost) AND ([retail] = @Origi" + 
					"nal_retail) AND ((@IsNull_retail2 = 1 AND [retail2] IS NULL) OR ([retail2] = @Or" + 
					"iginal_retail2)) AND ((@IsNull_maximum = 1 AND [maximum] IS NULL) OR ([maximum] " + 
					"= @Original_maximum)) AND ((@IsNull_minimum = 1 AND [minimum] IS NULL) OR ([mini" + 
					"mum] = @Original_minimum)) AND ((@IsNull_sizeid = 1 AND [sizeid] IS NULL) OR ([s" + 
					"izeid] = @Original_sizeid)) AND ([stckid] = @Original_stckid));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT barcode," + 
					" item_desc, supcode, categoryid, dept, cost, retail, retail2, maximum, minimum, " + 
					"sizeid, stckid FROM stocks WHERE (stckid = @stckid)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@barcode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "barcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@item_desc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "item_desc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@categoryid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "categoryid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@dept", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "dept", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "cost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@retail", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@retail2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@maximum", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "maximum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@minimum", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "minimum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sizeid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sizeid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_barcode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "barcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_item_desc", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "item_desc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_categoryid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "categoryid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_categoryid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "categoryid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_dept", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "dept", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_dept", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "dept", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cost", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "cost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_retail", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_retail2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_retail2", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "retail2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_maximum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "maximum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_maximum", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "maximum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_minimum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "minimum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_minimum", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "minimum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sizeid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sizeid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sizeid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sizeid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_stckid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "stckid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@stckid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "stckid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::DoorsPOS.WinApp.My.Settings.Default.doorsposConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT barcode, item_desc, supcode, categoryid, dept, cost, retail, retail2, maxi" + 
					"mum, minimum, sizeid, stckid FROM stocks";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dsItem.stocksDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dsItem.stocksDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dsItem.stocksDataTable dataTable = new dsItem.stocksDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem.stocksDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem dataSet)
			{
				return this.Adapter.Update(dataSet, "stocks");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(string Original_barcode, string Original_item_desc, global::System.Nullable<int> Original_supcode, global::System.Nullable<int> Original_categoryid, global::System.Nullable<int> Original_dept, decimal Original_cost, decimal Original_retail, global::System.Nullable<decimal> Original_retail2, global::System.Nullable<double> Original_maximum, global::System.Nullable<double> Original_minimum, global::System.Nullable<int> Original_sizeid, int Original_stckid)
			{
				if (Original_barcode == null)
				{
					throw (new global::System.ArgumentNullException("Original_barcode"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToString(Original_barcode);
				}
				if (Original_item_desc == null)
				{
					throw (new global::System.ArgumentNullException("Original_item_desc"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = System.Convert.ToString(Original_item_desc);
				}
				if (Original_supcode.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[2].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[3].Value = System.Convert.ToInt32(Original_supcode.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[2].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (Original_categoryid.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[4].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[5].Value = System.Convert.ToInt32(Original_categoryid.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[4].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
				}
				if (Original_dept.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[6].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[7].Value = System.Convert.ToInt32(Original_dept.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[6].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				this.Adapter.DeleteCommand.Parameters[8].Value = System.Convert.ToDecimal(Original_cost);
				this.Adapter.DeleteCommand.Parameters[9].Value = System.Convert.ToDecimal(Original_retail);
				if (Original_retail2.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[10].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[11].Value = System.Convert.ToDecimal(Original_retail2.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[10].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
				}
				if (Original_maximum.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[12].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[13].Value = System.Convert.ToDouble(Original_maximum.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[12].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
				}
				if (Original_minimum.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[14].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[15].Value = System.Convert.ToDouble(Original_minimum.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[14].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
				}
				if (Original_sizeid.HasValue == true)
				{
					this.Adapter.DeleteCommand.Parameters[16].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[17].Value = System.Convert.ToInt32(Original_sizeid.Value);
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[16].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
				}
				this.Adapter.DeleteCommand.Parameters[18].Value = System.Convert.ToInt32(Original_stckid);
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string barcode, string item_desc, global::System.Nullable<int> supcode, global::System.Nullable<int> categoryid, global::System.Nullable<int> dept, decimal cost, decimal retail, global::System.Nullable<decimal> retail2, global::System.Nullable<double> maximum, global::System.Nullable<double> minimum, global::System.Nullable<int> sizeid)
			{
				if (barcode == null)
				{
					throw (new global::System.ArgumentNullException("barcode"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(barcode);
				}
				if (item_desc == null)
				{
					throw (new global::System.ArgumentNullException("item_desc"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[1].Value = System.Convert.ToString(item_desc);
				}
				if (supcode.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[2].Value = System.Convert.ToInt32(supcode.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (categoryid.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[3].Value = System.Convert.ToInt32(categoryid.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (dept.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[4].Value = System.Convert.ToInt32(dept.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				this.Adapter.InsertCommand.Parameters[5].Value = System.Convert.ToDecimal(cost);
				this.Adapter.InsertCommand.Parameters[6].Value = System.Convert.ToDecimal(retail);
				if (retail2.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[7].Value = System.Convert.ToDecimal(retail2.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (maximum.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[8].Value = System.Convert.ToDouble(maximum.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (minimum.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[9].Value = System.Convert.ToDouble(minimum.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (sizeid.HasValue == true)
				{
					this.Adapter.InsertCommand.Parameters[10].Value = System.Convert.ToInt32(sizeid.Value);
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string barcode, string item_desc, global::System.Nullable<int> supcode, global::System.Nullable<int> categoryid, global::System.Nullable<int> dept, decimal cost, decimal retail, global::System.Nullable<decimal> retail2, global::System.Nullable<double> maximum, global::System.Nullable<double> minimum, global::System.Nullable<int> sizeid, string Original_barcode, string Original_item_desc, global::System.Nullable<int> Original_supcode, global::System.Nullable<int> Original_categoryid, global::System.Nullable<int> Original_dept, decimal Original_cost, decimal Original_retail, global::System.Nullable<decimal> Original_retail2, global::System.Nullable<double> Original_maximum, global::System.Nullable<double> Original_minimum, global::System.Nullable<int> Original_sizeid, int Original_stckid, int stckid)
			{
				if (barcode == null)
				{
					throw (new global::System.ArgumentNullException("barcode"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(barcode);
				}
				if (item_desc == null)
				{
					throw (new global::System.ArgumentNullException("item_desc"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToString(item_desc);
				}
				if (supcode.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = System.Convert.ToInt32(supcode.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				if (categoryid.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToInt32(categoryid.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				if (dept.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = System.Convert.ToInt32(dept.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[5].Value = System.Convert.ToDecimal(cost);
				this.Adapter.UpdateCommand.Parameters[6].Value = System.Convert.ToDecimal(retail);
				if (retail2.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = System.Convert.ToDecimal(retail2.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
				}
				if (maximum.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = System.Convert.ToDouble(maximum.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
				}
				if (minimum.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = System.Convert.ToDouble(minimum.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
				}
				if (sizeid.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = System.Convert.ToInt32(sizeid.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
				}
				if (Original_barcode == null)
				{
					throw (new global::System.ArgumentNullException("Original_barcode"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[11].Value = System.Convert.ToString(Original_barcode);
				}
				if (Original_item_desc == null)
				{
					throw (new global::System.ArgumentNullException("Original_item_desc"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[12].Value = System.Convert.ToString(Original_item_desc);
				}
				if (Original_supcode.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[14].Value = System.Convert.ToInt32(Original_supcode.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[13].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
				}
				if (Original_categoryid.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[16].Value = System.Convert.ToInt32(Original_categoryid.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[15].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
				}
				if (Original_dept.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[18].Value = System.Convert.ToInt32(Original_dept.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[17].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[19].Value = System.Convert.ToDecimal(Original_cost);
				this.Adapter.UpdateCommand.Parameters[20].Value = System.Convert.ToDecimal(Original_retail);
				if (Original_retail2.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[21].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[22].Value = System.Convert.ToDecimal(Original_retail2.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[21].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
				}
				if (Original_maximum.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[23].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[24].Value = System.Convert.ToDouble(Original_maximum.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[23].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
				}
				if (Original_minimum.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[25].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[26].Value = System.Convert.ToDouble(Original_minimum.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[25].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
				}
				if (Original_sizeid.HasValue == true)
				{
					this.Adapter.UpdateCommand.Parameters[27].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[28].Value = System.Convert.ToInt32(Original_sizeid.Value);
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[27].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
				}
				this.Adapter.UpdateCommand.Parameters[29].Value = System.Convert.ToInt32(Original_stckid);
				this.Adapter.UpdateCommand.Parameters[30].Value = System.Convert.ToInt32(stckid);
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string barcode, string item_desc, global::System.Nullable<int> supcode, global::System.Nullable<int> categoryid, global::System.Nullable<int> dept, decimal cost, decimal retail, global::System.Nullable<decimal> retail2, global::System.Nullable<double> maximum, global::System.Nullable<double> minimum, global::System.Nullable<int> sizeid, string Original_barcode, string Original_item_desc, global::System.Nullable<int> Original_supcode, global::System.Nullable<int> Original_categoryid, global::System.Nullable<int> Original_dept, decimal Original_cost, decimal Original_retail, global::System.Nullable<decimal> Original_retail2, global::System.Nullable<double> Original_maximum, global::System.Nullable<double> Original_minimum, global::System.Nullable<int> Original_sizeid, int Original_stckid)
			{
				return this.Update(barcode, item_desc, supcode, categoryid, dept, cost, retail, retail2, maximum, minimum, sizeid, Original_barcode, Original_item_desc, Original_supcode, Original_categoryid, Original_dept, Original_cost, Original_retail, Original_retail2, Original_maximum, Original_minimum, Original_sizeid, Original_stckid, Original_stckid);
			}
		}
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class suppliersTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public suppliersTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!((this.Adapter.InsertCommand) == null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!((this.Adapter.DeleteCommand) == null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!((this.Adapter.UpdateCommand) == null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!((this.CommandCollection[i]) == null))
						{
							((global::System.Data.SqlClient.SqlCommand) (this.CommandCollection[i])).Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.DeleteCommand) == null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.InsertCommand) == null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.UpdateCommand) == null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "suppliers";
				tableMapping.ColumnMappings.Add("supcode", "supcode");
				tableMapping.ColumnMappings.Add("supplier", "supplier");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[suppliers] WHERE (([supcode] = @Original_supcode) AND ([suppli" + 
					"er] = @Original_supplier))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supplier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supplier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[suppliers] ([supplier]) VALUES (@supplier);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT supcode, s" + 
					"upplier FROM suppliers WHERE (supcode = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@supplier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supplier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[suppliers] SET [supplier] = @supplier WHERE (([supcode] = @Original" + 
					"_supcode) AND ([supplier] = @Original_supplier));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT supcode, supplier FROM" + 
					" suppliers WHERE (supcode = @supcode)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@supplier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supplier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supcode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_supplier", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supplier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@supcode", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "supcode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::DoorsPOS.WinApp.My.Settings.Default.doorsposConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT supcode, supplier FROM dbo.suppliers";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dsItem.suppliersDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dsItem.suppliersDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dsItem.suppliersDataTable dataTable = new dsItem.suppliersDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem.suppliersDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem dataSet)
			{
				return this.Adapter.Update(dataSet, "suppliers");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(int Original_supcode, string Original_supplier)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToInt32(Original_supcode);
				if (Original_supplier == null)
				{
					throw (new global::System.ArgumentNullException("Original_supplier"));
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = System.Convert.ToString(Original_supplier);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string supplier)
			{
				if (supplier == null)
				{
					throw (new global::System.ArgumentNullException("supplier"));
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(supplier);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string supplier, int Original_supcode, string Original_supplier, int supcode)
			{
				if (supplier == null)
				{
					throw (new global::System.ArgumentNullException("supplier"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(supplier);
				}
				this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToInt32(Original_supcode);
				if (Original_supplier == null)
				{
					throw (new global::System.ArgumentNullException("Original_supplier"));
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = System.Convert.ToString(Original_supplier);
				}
				this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToInt32(supcode);
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string supplier, int Original_supcode, string Original_supplier)
			{
				return this.Update(supplier, Original_supcode, Original_supplier, Original_supcode);
			}
		}
		
		///<summary>
		///Represents the connection and commands used to retrieve and save data.
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DataObjectAttribute(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" + 
		", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public 
		partial class wsizeTableAdapter : global::System.ComponentModel.Component
		{
			
			private global::System.Data.SqlClient.SqlDataAdapter _adapter;
			
			private global::System.Data.SqlClient.SqlConnection _connection;
			
			private global::System.Data.SqlClient.SqlTransaction _transaction;
			
			private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
			
			private bool _clearBeforeFill;
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public wsizeTableAdapter()
			{
				this.ClearBeforeFill = true;
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter
			{
				get
				{
					if (this._adapter == null)
					{
						this.InitAdapter();
					}
					return this._adapter;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlConnection Connection
			{
				get
				{
					if (this._connection == null)
					{
						this.InitConnection();
					}
					return this._connection;
				}
				set
				{
					this._connection = value;
					if (!((this.Adapter.InsertCommand) == null))
					{
						this.Adapter.InsertCommand.Connection = value;
					}
					if (!((this.Adapter.DeleteCommand) == null))
					{
						this.Adapter.DeleteCommand.Connection = value;
					}
					if (!((this.Adapter.UpdateCommand) == null))
					{
						this.Adapter.UpdateCommand.Connection = value;
					}
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						if (!((this.CommandCollection[i]) == null))
						{
							((global::System.Data.SqlClient.SqlCommand) (this.CommandCollection[i])).Connection = value;
						}
						i = i + 1;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal global::System.Data.SqlClient.SqlTransaction Transaction
			{
				get
				{
					return this._transaction;
				}
				set
				{
					this._transaction = value;
					int i = 0;
					while (i < this.CommandCollection.Length)
					{
						this.CommandCollection[i].Transaction = this._transaction;
						i = i + 1;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.DeleteCommand) == null)))
					{
						this.Adapter.DeleteCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.InsertCommand) == null)))
					{
						this.Adapter.InsertCommand.Transaction = this._transaction;
					}
					if ((!((this.Adapter) == null)) 
						&& (!((this.Adapter.UpdateCommand) == null)))
					{
						this.Adapter.UpdateCommand.Transaction = this._transaction;
					}
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected global::System.Data.SqlClient.SqlCommand[] CommandCollection
			{
				get
				{
					if (this._commandCollection == null)
					{
						this.InitCommandCollection();
					}
					return this._commandCollection;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool ClearBeforeFill
			{
				get
				{
					return this._clearBeforeFill;
				}
				set
				{
					this._clearBeforeFill = value;
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitAdapter()
			{
				this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
				global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
				tableMapping.SourceTable = "Table";
				tableMapping.DataSetTable = "wsize";
				tableMapping.ColumnMappings.Add("sizeid", "sizeid");
				tableMapping.ColumnMappings.Add("sayz", "sayz");
				this._adapter.TableMappings.Add(tableMapping);
				this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.DeleteCommand.Connection = this.Connection;
				this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[wsize] WHERE (([sizeid] = @Original_sizeid) AND ((@IsNull_sayz" + 
					" = 1 AND [sayz] IS NULL) OR ([sayz] = @Original_sayz)))";
				this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sizeid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sizeid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sayz", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sayz", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sayz", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sayz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.InsertCommand.Connection = this.Connection;
				this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[wsize] ([sayz]) VALUES (@sayz);" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT sizeid, sayz FROM wsiz" + 
					"e WHERE (sizeid = SCOPE_IDENTITY())";
				this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sayz", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sayz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
				this._adapter.UpdateCommand.Connection = this.Connection;
				this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[wsize] SET [sayz] = @sayz WHERE (([sizeid] = @Original_sizeid) AND " + 
					"((@IsNull_sayz = 1 AND [sayz] IS NULL) OR ([sayz] = @Original_sayz)));" + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(13)) + System.Convert.ToString(global::Microsoft.VisualBasic.Strings.ChrW(10)) + "SELECT s" + 
					"izeid, sayz FROM wsize WHERE (sizeid = @sizeid)";
				this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sayz", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sayz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sizeid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sizeid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sayz", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sayz", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sayz", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sayz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
				this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sizeid", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, (byte) 0, (byte) 0, "sizeid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitConnection()
			{
				this._connection = new global::System.Data.SqlClient.SqlConnection();
				this._connection.ConnectionString = global::DoorsPOS.WinApp.My.Settings.Default.doorsposConnectionString;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private void InitCommandCollection()
			{
				this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
				this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
				this._commandCollection[0].Connection = this.Connection;
				this._commandCollection[0].CommandText = "SELECT sizeid, sayz FROM dbo.wsize";
				this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]public virtual int Fill(dsItem.wsizeDataTable dataTable)
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				if (this.ClearBeforeFill == true)
				{
					dataTable.Clear();
				}
				int returnValue = this.Adapter.Fill(dataTable);
				return returnValue;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]public virtual dsItem.wsizeDataTable GetData()
			{
				this.Adapter.SelectCommand = this.CommandCollection[0];
				dsItem.wsizeDataTable dataTable = new dsItem.wsizeDataTable();
				this.Adapter.Fill(dataTable);
				return dataTable;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem.wsizeDataTable dataTable)
			{
				return this.Adapter.Update(dataTable);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(dsItem dataSet)
			{
				return this.Adapter.Update(dataSet, "wsize");
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow dataRow)
			{
				return this.Adapter.Update(new global::System.Data.DataRow[] {dataRow});
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]public virtual int Update(global::System.Data.DataRow[] dataRows)
			{
				return this.Adapter.Update(dataRows);
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]public virtual int Delete(int Original_sizeid, string Original_sayz)
			{
				this.Adapter.DeleteCommand.Parameters[0].Value = System.Convert.ToInt32(Original_sizeid);
				if (Original_sayz == null)
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object) (1);
					this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.DeleteCommand.Parameters[1].Value = (object) (0);
					this.Adapter.DeleteCommand.Parameters[2].Value = System.Convert.ToString(Original_sayz);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
				if ((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.DeleteCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.DeleteCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]public virtual int Insert(string sayz)
			{
				if (sayz == null)
				{
					this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.InsertCommand.Parameters[0].Value = System.Convert.ToString(sayz);
				}
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
				if ((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.InsertCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.InsertCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string sayz, int Original_sizeid, string Original_sayz, int sizeid)
			{
				if (sayz == null)
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[0].Value = System.Convert.ToString(sayz);
				}
				this.Adapter.UpdateCommand.Parameters[1].Value = System.Convert.ToInt32(Original_sizeid);
				if (Original_sayz == null)
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (object) (1);
					this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
				}
				else
				{
					this.Adapter.UpdateCommand.Parameters[2].Value = (object) (0);
					this.Adapter.UpdateCommand.Parameters[3].Value = System.Convert.ToString(Original_sayz);
				}
				this.Adapter.UpdateCommand.Parameters[4].Value = System.Convert.ToInt32(sizeid);
				global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
				if ((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
					!= global::System.Data.ConnectionState.Open)
				{
					this.Adapter.UpdateCommand.Connection.Open();
				}
				try
				{
					int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
					return returnValue;
				}
				finally
				{
					if (previousConnectionState == global::System.Data.ConnectionState.Closed)
					{
						this.Adapter.UpdateCommand.Connection.Close();
					}
				}
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
			global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), 
			global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]public virtual int Update(string sayz, int Original_sizeid, string Original_sayz)
			{
				return this.Update(sayz, Original_sizeid, Original_sayz, Original_sizeid);
			}
		}
		
		///<summary>
		///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
		///</summary>
		[global::System.ComponentModel.DesignerCategoryAttribute("code"), 
		global::System.ComponentModel.ToolboxItem(true), 
		global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" + 
		"esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
		global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]public 
		partial class TableAdapterManager : global::System.ComponentModel.Component
		{
			
			private UpdateOrderOption _updateOrder;
			
			private categoriesTableAdapter _categoriesTableAdapter;
			
			private deptTableAdapter _deptTableAdapter;
			
			private stocksTableAdapter _stocksTableAdapter;
			
			private suppliersTableAdapter _suppliersTableAdapter;
			
			private wsizeTableAdapter _wsizeTableAdapter;
			
			private bool _backupDataSetBeforeUpdate;
			
			private global::System.Data.IDbConnection _connection;
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public UpdateOrderOption UpdateOrder
			{
				get
				{
					return this._updateOrder;
				}
				set
				{
					this._updateOrder = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
"a", "System.Drawing.Design.UITypeEditor")]public categoriesTableAdapter categoriesTableAdapter
			{
				get
				{
					return this._categoriesTableAdapter;
				}
				set
				{
					this._categoriesTableAdapter = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
"a", "System.Drawing.Design.UITypeEditor")]public deptTableAdapter deptTableAdapter
			{
				get
				{
					return this._deptTableAdapter;
				}
				set
				{
					this._deptTableAdapter = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
"a", "System.Drawing.Design.UITypeEditor")]public stocksTableAdapter stocksTableAdapter
			{
				get
				{
					return this._stocksTableAdapter;
				}
				set
				{
					this._stocksTableAdapter = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
"a", "System.Drawing.Design.UITypeEditor")]public suppliersTableAdapter suppliersTableAdapter
			{
				get
				{
					return this._suppliersTableAdapter;
				}
				set
				{
					this._suppliersTableAdapter = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" + 
"ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" + 
"a", "System.Drawing.Design.UITypeEditor")]public wsizeTableAdapter wsizeTableAdapter
			{
				get
				{
					return this._wsizeTableAdapter;
				}
				set
				{
					this._wsizeTableAdapter = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public bool BackupDataSetBeforeUpdate
			{
				get
				{
					return this._backupDataSetBeforeUpdate;
				}
				set
				{
					this._backupDataSetBeforeUpdate = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public global::System.Data.IDbConnection Connection
			{
				get
				{
					if (!((this._connection) == null))
					{
						return this._connection;
					}
					if ((!((this._categoriesTableAdapter) == null)) 
						&& (!((this._categoriesTableAdapter.Connection) == null)))
					{
						return this._categoriesTableAdapter.Connection;
					}
					if ((!((this._deptTableAdapter) == null)) 
						&& (!((this._deptTableAdapter.Connection) == null)))
					{
						return this._deptTableAdapter.Connection;
					}
					if ((!((this._stocksTableAdapter) == null)) 
						&& (!((this._stocksTableAdapter.Connection) == null)))
					{
						return this._stocksTableAdapter.Connection;
					}
					if ((!((this._suppliersTableAdapter) == null)) 
						&& (!((this._suppliersTableAdapter.Connection) == null)))
					{
						return this._suppliersTableAdapter.Connection;
					}
					if ((!((this._wsizeTableAdapter) == null)) 
						&& (!((this._wsizeTableAdapter.Connection) == null)))
					{
						return this._wsizeTableAdapter.Connection;
					}
					return null;
				}
				set
				{
					this._connection = value;
				}
			}
			
[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), 
global::System.ComponentModel.Browsable(false)]public int TableAdapterInstanceCount
			{
				get
				{
					int count = 0;
					if (!((this._categoriesTableAdapter) == null))
					{
						count = count + 1;
					}
					if (!((this._deptTableAdapter) == null))
					{
						count = count + 1;
					}
					if (!((this._stocksTableAdapter) == null))
					{
						count = count + 1;
					}
					if (!((this._suppliersTableAdapter) == null))
					{
						count = count + 1;
					}
					if (!((this._wsizeTableAdapter) == null))
					{
						count = count + 1;
					}
					return count;
				}
			}
			
			///<summary>
			///Update rows in top-down order.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private int UpdateUpdatedRows(dsItem dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
			{
				int result = 0;
				if (!((this._categoriesTableAdapter) == null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.categories.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!((updatedRows) == null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._categoriesTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				if (!((this._deptTableAdapter) == null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.dept.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!((updatedRows) == null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._deptTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				if (!((this._suppliersTableAdapter) == null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.suppliers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!((updatedRows) == null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._suppliersTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				if (!((this._wsizeTableAdapter) == null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.wsize.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!((updatedRows) == null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._wsizeTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				if (!((this._stocksTableAdapter) == null))
				{
					global::System.Data.DataRow[] updatedRows = dataSet.stocks.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
					updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
					if ((!((updatedRows) == null)) 
						&& (0 < updatedRows.Length))
					{
						result = result + this._stocksTableAdapter.Update(updatedRows);
						allChangedRows.AddRange(updatedRows);
					}
				}
				return result;
			}
			
			///<summary>
			///Insert rows in top-down order.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private int UpdateInsertedRows(dsItem dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
			{
				int result = 0;
				if (!((this._categoriesTableAdapter) == null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.categories.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!((addedRows) == null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._categoriesTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				if (!((this._deptTableAdapter) == null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.dept.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!((addedRows) == null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._deptTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				if (!((this._suppliersTableAdapter) == null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.suppliers.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!((addedRows) == null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._suppliersTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				if (!((this._wsizeTableAdapter) == null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.wsize.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!((addedRows) == null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._wsizeTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				if (!((this._stocksTableAdapter) == null))
				{
					global::System.Data.DataRow[] addedRows = dataSet.stocks.Select(null, null, global::System.Data.DataViewRowState.Added);
					if ((!((addedRows) == null)) 
						&& (0 < addedRows.Length))
					{
						result = result + this._stocksTableAdapter.Update(addedRows);
						allAddedRows.AddRange(addedRows);
					}
				}
				return result;
			}
			
			///<summary>
			///Delete rows in bottom-up order.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private int UpdateDeletedRows(dsItem dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows)
			{
				int result = 0;
				if (!((this._stocksTableAdapter) == null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.stocks.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!((deletedRows) == null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._stocksTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				if (!((this._wsizeTableAdapter) == null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.wsize.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!((deletedRows) == null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._wsizeTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				if (!((this._suppliersTableAdapter) == null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.suppliers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!((deletedRows) == null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._suppliersTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				if (!((this._deptTableAdapter) == null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.dept.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!((deletedRows) == null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._deptTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				if (!((this._categoriesTableAdapter) == null))
				{
					global::System.Data.DataRow[] deletedRows = dataSet.categories.Select(null, null, global::System.Data.DataViewRowState.Deleted);
					if ((!((deletedRows) == null)) 
						&& (0 < deletedRows.Length))
					{
						result = result + this._categoriesTableAdapter.Update(deletedRows);
						allChangedRows.AddRange(deletedRows);
					}
				}
				return result;
			}
			
			///<summary>
			///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows)
			{
				if ((updatedRows == null) 
					|| (updatedRows.Length < 1))
				{
					return updatedRows;
				}
				if ((allAddedRows == null) 
					|| (allAddedRows.Count < 1))
				{
					return updatedRows;
				}
				global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
				int i = 0;
				while (i < updatedRows.Length)
				{
					global::System.Data.DataRow row = updatedRows[i];
					if (allAddedRows.Contains(row) == false)
					{
						realUpdatedRows.Add(row);
					}
					i = i + 1;
				}
				return realUpdatedRows.ToArray;
			}
			
			///<summary>
			///Update all changes to the dataset.
			///</summary>
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public virtual int UpdateAll(dsItem dataSet)
			{
				if (dataSet == null)
				{
					throw (new global::System.ArgumentNullException("dataSet"));
				}
				if (dataSet.HasChanges() == false)
				{
					return 0;
				}
				if ((!((this._categoriesTableAdapter) == null)) 
					&& (this.MatchTableAdapterConnection(this._categoriesTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" + 
						"tring."));
				}
				if ((!((this._deptTableAdapter) == null)) 
					&& (this.MatchTableAdapterConnection(this._deptTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" + 
						"tring."));
				}
				if ((!((this._stocksTableAdapter) == null)) 
					&& (this.MatchTableAdapterConnection(this._stocksTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" + 
						"tring."));
				}
				if ((!((this._suppliersTableAdapter) == null)) 
					&& (this.MatchTableAdapterConnection(this._suppliersTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" + 
						"tring."));
				}
				if ((!((this._wsizeTableAdapter) == null)) 
					&& (this.MatchTableAdapterConnection(this._wsizeTableAdapter.Connection) == false))
				{
					throw (new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" + 
						"tring."));
				}
				global::System.Data.IDbConnection workConnection = this.Connection;
				if (workConnection == null)
				{
					throw (new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" + 
						"ger TableAdapter property to a valid TableAdapter instance."));
				}
				bool workConnOpened = false;
				if ((workConnection.State & global::System.Data.ConnectionState.Broken) 
					== (int) global::System.Data.ConnectionState.Broken)
				{
					workConnection.Close();
				}
				if (workConnection.State == global::System.Data.ConnectionState.Closed)
				{
					workConnection.Open();
					workConnOpened = true;
				}
				global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
				if (workTransaction == null)
				{
					throw (new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" + 
						"ctions or the current state is not allowing the transaction to begin."));
				}
				global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
				global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
				global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
				global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
				int result = 0;
				global::System.Data.DataSet backupDataSet = null;
				if (this.BackupDataSetBeforeUpdate)
				{
					backupDataSet = new global::System.Data.DataSet();
					backupDataSet.Merge(dataSet);
				}
				try
				{
					//---- Prepare for update -----------
					//
					if (!((this._categoriesTableAdapter) == null))
					{
						revertConnections.Add(this._categoriesTableAdapter, this._categoriesTableAdapter.Connection);
						this._categoriesTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._categoriesTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._categoriesTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._categoriesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._categoriesTableAdapter.Adapter);
						}
					}
					if (!((this._deptTableAdapter) == null))
					{
						revertConnections.Add(this._deptTableAdapter, this._deptTableAdapter.Connection);
						this._deptTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._deptTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._deptTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._deptTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._deptTableAdapter.Adapter);
						}
					}
					if (!((this._stocksTableAdapter) == null))
					{
						revertConnections.Add(this._stocksTableAdapter, this._stocksTableAdapter.Connection);
						this._stocksTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._stocksTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._stocksTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._stocksTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._stocksTableAdapter.Adapter);
						}
					}
					if (!((this._suppliersTableAdapter) == null))
					{
						revertConnections.Add(this._suppliersTableAdapter, this._suppliersTableAdapter.Connection);
						this._suppliersTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._suppliersTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._suppliersTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._suppliersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._suppliersTableAdapter.Adapter);
						}
					}
					if (!((this._wsizeTableAdapter) == null))
					{
						revertConnections.Add(this._wsizeTableAdapter, this._wsizeTableAdapter.Connection);
						this._wsizeTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) workConnection;
						this._wsizeTableAdapter.Transaction = (global::System.Data.SqlClient.SqlTransaction) workTransaction;
						if (this._wsizeTableAdapter.Adapter.AcceptChangesDuringUpdate)
						{
							this._wsizeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
							adaptersWithAcceptChangesDuringUpdate.Add(this._wsizeTableAdapter.Adapter);
						}
					}
					//
					//---- Perform updates -----------
					//
					if (this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)
					{
						result = result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
						result = result + this.UpdateInsertedRows(dataSet, allAddedRows);
					}
					else
					{
						result = result + this.UpdateInsertedRows(dataSet, allAddedRows);
						result = result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
					}
					result = result + this.UpdateDeletedRows(dataSet, allChangedRows);
					//
					//---- Commit updates -----------
					//
					workTransaction.Commit();
					if (0 < allAddedRows.Count)
					{
						global::System.Data.DataRow[] rows = new global::System.Data.DataRow[(allAddedRows.Count) - 1 + 1];
						allAddedRows.CopyTo(rows);
						int i = 0;
						while (i < rows.Length)
						{
							global::System.Data.DataRow row = rows[i];
							row.AcceptChanges();
							i = i + 1;
						}
					}
					if (0 < allChangedRows.Count)
					{
						global::System.Data.DataRow[] rows = new global::System.Data.DataRow[(allChangedRows.Count) - 1 + 1];
						allChangedRows.CopyTo(rows);
						int i = 0;
						while (i < rows.Length)
						{
							global::System.Data.DataRow row = rows[i];
							row.AcceptChanges();
							i = i + 1;
						}
					}
				}
				catch (global::System.Exception ex)
				{
					workTransaction.Rollback();
					//---- Restore the dataset -----------
					if (this.BackupDataSetBeforeUpdate)
					{
						global::System.Diagnostics.Debug.Assert(!((backupDataSet) == null));
						dataSet.Clear();
						dataSet.Merge(backupDataSet);
					}
					else
					{
						if (0 < allAddedRows.Count)
						{
							global::System.Data.DataRow[] rows = new global::System.Data.DataRow[(allAddedRows.Count) - 1 + 1];
							allAddedRows.CopyTo(rows);
							int i = 0;
							while (i < rows.Length)
							{
								global::System.Data.DataRow row = rows[i];
								row.AcceptChanges();
								row.SetAdded();
								i = i + 1;
							}
						}
					}
					throw (ex);
				}
				finally
				{
					if (workConnOpened)
					{
						workConnection.Close();
					}
					if (!((this._categoriesTableAdapter) == null))
					{
						this._categoriesTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._categoriesTableAdapter]);
						this._categoriesTableAdapter.Transaction = null;
					}
					if (!((this._deptTableAdapter) == null))
					{
						this._deptTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._deptTableAdapter]);
						this._deptTableAdapter.Transaction = null;
					}
					if (!((this._stocksTableAdapter) == null))
					{
						this._stocksTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._stocksTableAdapter]);
						this._stocksTableAdapter.Transaction = null;
					}
					if (!((this._suppliersTableAdapter) == null))
					{
						this._suppliersTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._suppliersTableAdapter]);
						this._suppliersTableAdapter.Transaction = null;
					}
					if (!((this._wsizeTableAdapter) == null))
					{
						this._wsizeTableAdapter.Connection = (global::System.Data.SqlClient.SqlConnection) (revertConnections[this._wsizeTableAdapter]);
						this._wsizeTableAdapter.Transaction = null;
					}
					if (0 < adaptersWithAcceptChangesDuringUpdate.Count)
					{
						global::System.Data.Common.DataAdapter[] adapters = new global::System.Data.Common.DataAdapter[(adaptersWithAcceptChangesDuringUpdate.Count) - 1 + 1];
						adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
						int i = 0;
						while (i < adapters.Length)
						{
							global::System.Data.Common.DataAdapter adapter = adapters[i];
							adapter.AcceptChangesDuringUpdate = true;
							i = i + 1;
						}
					}
				}
				return result;
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst)
			{
				global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
			}
			
			[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
			global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection)
			{
				if (!((this._connection) == null))
				{
					return true;
				}
				if ((this.Connection == null) 
					|| (inputConnection == null))
				{
					return true;
				}
				if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal))
				{
					return true;
				}
				return false;
			}
			
			///<summary>
			///Update Order Option
			///</summary>
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public enum UpdateOrderOption
			{
				
				InsertUpdateDelete = 0,
				
				UpdateInsertDelete = 1
			}
			
			///<summary>
			///Used to sort self-referenced table's rows
			///</summary>
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow>
			{
				
				private global::System.Data.DataRelation _relation;
				
				private int _childFirst;
				
				[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
				global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst)
				{
					this._relation = relation;
					if (childFirst)
					{
						this._childFirst = -1;
					}
					else
					{
						this._childFirst = 1;
					}
				}
				
				[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
				global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, ref int distance)
				{
					global::System.Diagnostics.Debug.Assert(!((row) == null));
					global::System.Data.DataRow root = row;
					distance = 0;
					
					global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
					traversedRows[row] = row;
					
					global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
					
					while ((!((parent) == null)) 
						&& (traversedRows.ContainsKey(parent) == false))
					{
						distance = distance + 1;
						root = parent;
						traversedRows[parent] = parent;
						parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
						
					}
					
					if (distance == 0)
					{
						traversedRows.Clear();
						traversedRows[row] = row;
						parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
						
						while ((!((parent) == null)) 
							&& (traversedRows.ContainsKey(parent) == false))
						{
							distance = distance + 1;
							root = parent;
							traversedRows[parent] = parent;
							parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
							
						}
					}
					
					return root;
				}
				
				[global::System.Diagnostics.DebuggerNonUserCodeAttribute(), 
				global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2)
				{
					if (object.ReferenceEquals(row1, row2))
					{
						return 0;
					}
					if (row1 == null)
					{
						return -1;
					}
					if (row2 == null)
					{
						return 1;
					}
					
					int distance1 = 0;
					global::System.Data.DataRow root1 = this.GetRoot(row1, ref distance1);
					
					int distance2 = 0;
					global::System.Data.DataRow root2 = this.GetRoot(row2, ref distance2);
					
					if (object.ReferenceEquals(root1, root2))
					{
						return (this._childFirst * distance1.CompareTo(distance2));
					}
					else
					{
						global::System.Diagnostics.Debug.Assert((!((root1.Table) == null)) 
							&& (!((root2.Table) == null)));
						if (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))
						{
							return -1;
						}
						else
						{
							return 1;
						}
					}
				}
			}
		}
	}
	
}
